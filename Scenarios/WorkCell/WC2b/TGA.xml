	<nta>
	<declaration>
	//events
	//actions
	broadcast chan newBox, pickUpBoxR1, pickUpBoxR1DONE , pickUpBoxR2, pickUpBoxR2DONE , pickUpBoxH, pickUpBoxHDONE , screwR1, screwR1DONE , screwR2, screwR2DONE , screwH, screwHDONE , putDownBoxR1, putDownBoxR1DONE , putDownBoxR2, putDownBoxR2DONE , putDownBoxH, putDownBoxHDONE , done;
	
	//assuzione che initial state per ogni rule è sempre a index zero quandi si crea, dovrebbe essere coso
	//nota concettuale importante: mentre per le posizioni uso come sono ordinate nella definizione, erl e regole uso come le ordino io nel crearle
	int PworkFlow=0, PpickUp1=0, PpickUp2=0, PpickUpH=0;
	//Agents
	//nota: rule and agents can't have the same name
	clock Cbot1, Cbot2, Chuman;
	//tutte le volta che si prendono gli indici delle location, si shiftano di uno, così no c'è la location zero, e quindi non c'è nemmeno lo stato -0 che manda tutto in merda
	int Pbot1=1, Pbot2=1, Phuman=1;
	int SbusyR1=0, SbusyR2=0, SbusyH=0;
	//Objective
	
	clock Cobj;
	</declaration>
	 
	 
	 
	 
	automata_declaration
	
	state_updater
	<template>
	<name>states</name>
	<location id="base">
	<name>base</name>
	</location>
	<init ref = "base"/>	
	<transition>
	<source ref="base"/>
	<target ref="base"/>
	<label kind="synchronisation">pickUpBoxR1?</label>
	<label kind="assignment">SbusyR1=1</label>
	</transition>
	<transition>
	<source ref="base"/>
	<target ref="base"/>
	<label kind="synchronisation">putDownBoxR1?</label>
	<label kind="assignment">SbusyR1=0</label>
	</transition>
	<transition>
	<source ref="base"/>
	<target ref="base"/>
	<label kind="synchronisation">pickUpBoxR2?</label>
	<label kind="assignment">SbusyR2=1</label>
	</transition>
	<transition>
	<source ref="base"/>
	<target ref="base"/>
	<label kind="synchronisation">putDownBoxR2?</label>
	<label kind="assignment">SbusyR2=0</label>
	</transition>
	<transition>
	<source ref="base"/>
	<target ref="base"/>
	<label kind="synchronisation">pickUpBoxH?</label>
	<label kind="assignment">SbusyH=1</label>
	</transition>
	<transition>
	<source ref="base"/>
	<target ref="base"/>
	<label kind="synchronisation">putDownBoxH?</label>
	<label kind="assignment">SbusyH=0</label>
	</transition>
	</template>
	
	
	rules
			

					
		<template>
		<name>workFlow</name>
		//states declarions
		<location id="workFlow_initial_location">
		</location>
		
		<location id="workFlow1f">
		</location>
		<location id="workFlow3fsf_fir_doing_pickUpBoxR1">
		</location>
		
		<location id="workFlow3fsf_sec_doing_pickUpBoxR2">
		</location>
		
		<location id="workFlow2fs_sec_doing_pickUpBoxH">
		</location>
		<location id="workFlow0">
		</location>
		
		<location id="workFlow4sfff_fir_doing_screwR1">
		</location>
		
		<location id="workFlow4sfff_sec_doing_screwR2">
		</location>
		
		<location id="workFlow3sff_sec_doing_screwH">
		</location>
		
		<location id="workFlow2sf">
		</location>
		<location id="workFlow4sfsf_fir_doing_putDownBoxR1">
		</location>
		
		<location id="workFlow4sfsf_sec_doing_putDownBoxR2">
		</location>
		
		<location id="workFlow3sfs_sec_doing_putDownBoxH">
		</location>
		
		<location id="workFlow1s">
		</location>
		<init ref = "workFlow_initial_location"/>	
		//transitions
		
		
		
		
		
		<transition>
		<source ref="workFlow_initial_location"/>
		<target ref="workFlow1f"/>
		<label kind="synchronisation">newBox?</label>
		<label kind="assignment">PworkFlow = 1</label>
		</transition>			
		
		
		
		
		
		
		<transition>
		<source ref="workFlow1f"/>
		<target ref="workFlow3fsf_fir_doing_pickUpBoxR1"/>
		<label kind="synchronisation">pickUpBoxR1?</label>
		<label kind="assignment">PworkFlow = 2</label>
		</transition>	
		<transition>
		<source ref="workFlow3fsf_fir_doing_pickUpBoxR1"/>
		<target ref="workFlow0"/>
		<label kind="synchronisation">pickUpBoxR1DONE?</label>
		<label kind="assignment">PworkFlow = 5</label>
		</transition>			
		
		<transition>
		<source ref="workFlow1f"/>
		<target ref="workFlow3fsf_sec_doing_pickUpBoxR2"/>
		<label kind="synchronisation">pickUpBoxR2?</label>
		<label kind="assignment">PworkFlow = 3</label>
		</transition>	
		<transition>
		<source ref="workFlow3fsf_sec_doing_pickUpBoxR2"/>
		<target ref="workFlow0"/>
		<label kind="synchronisation">pickUpBoxR2DONE?</label>
		<label kind="assignment">PworkFlow = 5</label>
		</transition>			
		
		
		<transition>
		<source ref="workFlow1f"/>
		<target ref="workFlow2fs_sec_doing_pickUpBoxH"/>
		<label kind="synchronisation">pickUpBoxH?</label>
		<label kind="assignment">PworkFlow = 4</label>
		</transition>	
		<transition>
		<source ref="workFlow2fs_sec_doing_pickUpBoxH"/>
		<target ref="workFlow0"/>
		<label kind="synchronisation">pickUpBoxHDONE?</label>
		<label kind="assignment">PworkFlow = 5</label>
		</transition>			
		
		
		
		
		
		
		
		
		
		
		
		
		
		<transition>
		<source ref="workFlow0"/>
		<target ref="workFlow4sfff_fir_doing_screwR1"/>
		<label kind="synchronisation">screwR1?</label>
		<label kind="assignment">PworkFlow = 6</label>
		</transition>	
		<transition>
		<source ref="workFlow4sfff_fir_doing_screwR1"/>
		<target ref="workFlow2sf"/>
		<label kind="synchronisation">screwR1DONE?</label>
		<label kind="assignment">PworkFlow = 9</label>
		</transition>			
		
		<transition>
		<source ref="workFlow0"/>
		<target ref="workFlow4sfff_sec_doing_screwR2"/>
		<label kind="synchronisation">screwR2?</label>
		<label kind="assignment">PworkFlow = 7</label>
		</transition>	
		<transition>
		<source ref="workFlow4sfff_sec_doing_screwR2"/>
		<target ref="workFlow2sf"/>
		<label kind="synchronisation">screwR2DONE?</label>
		<label kind="assignment">PworkFlow = 9</label>
		</transition>			
		
		
		<transition>
		<source ref="workFlow0"/>
		<target ref="workFlow3sff_sec_doing_screwH"/>
		<label kind="synchronisation">screwH?</label>
		<label kind="assignment">PworkFlow = 8</label>
		</transition>	
		<transition>
		<source ref="workFlow3sff_sec_doing_screwH"/>
		<target ref="workFlow2sf"/>
		<label kind="synchronisation">screwHDONE?</label>
		<label kind="assignment">PworkFlow = 9</label>
		</transition>			
		
		
		
		
		
		
		
		<transition>
		<source ref="workFlow2sf"/>
		<target ref="workFlow4sfsf_fir_doing_putDownBoxR1"/>
		<label kind="synchronisation">putDownBoxR1?</label>
		<label kind="assignment">PworkFlow = 10</label>
		</transition>	
		<transition>
		<source ref="workFlow4sfsf_fir_doing_putDownBoxR1"/>
		<target ref="workFlow1s"/>
		<label kind="synchronisation">putDownBoxR1DONE?</label>
		<label kind="assignment">PworkFlow = 13</label>
		</transition>			
		
		<transition>
		<source ref="workFlow2sf"/>
		<target ref="workFlow4sfsf_sec_doing_putDownBoxR2"/>
		<label kind="synchronisation">putDownBoxR2?</label>
		<label kind="assignment">PworkFlow = 11</label>
		</transition>	
		<transition>
		<source ref="workFlow4sfsf_sec_doing_putDownBoxR2"/>
		<target ref="workFlow1s"/>
		<label kind="synchronisation">putDownBoxR2DONE?</label>
		<label kind="assignment">PworkFlow = 13</label>
		</transition>			
		
		
		<transition>
		<source ref="workFlow2sf"/>
		<target ref="workFlow3sfs_sec_doing_putDownBoxH"/>
		<label kind="synchronisation">putDownBoxH?</label>
		<label kind="assignment">PworkFlow = 12</label>
		</transition>	
		<transition>
		<source ref="workFlow3sfs_sec_doing_putDownBoxH"/>
		<target ref="workFlow1s"/>
		<label kind="synchronisation">putDownBoxHDONE?</label>
		<label kind="assignment">PworkFlow = 13</label>
		</transition>			
		
		
		<transition>
		<source ref="workFlow1s"/>
		<target ref="workFlow_initial_location"/>
		<label kind="synchronisation">done?</label>
		<label kind="assignment">PworkFlow = 0</label>
		</transition>			
		</template>
			

					
		<template>
		<name>pickUp1</name>
		//states declarions
		<location id="pickUp1_initial_location">
		</location>
		<location id="pickUp10f_doing_pickUpBoxR1">
		</location>
		<location id="pickUp10">
		</location>
		
		<location id="pickUp10s_doing_putDownBoxR1">
		</location>
		<init ref = "pickUp1_initial_location"/>	
		//transitions
		
		
		
		<transition>
		<source ref="pickUp1_initial_location"/>
		<target ref="pickUp10f_doing_pickUpBoxR1"/>
		<label kind="synchronisation">pickUpBoxR1?</label>
		<label kind="assignment">PpickUp1 = 1</label>
		</transition>	
		<transition>
		<source ref="pickUp10f_doing_pickUpBoxR1"/>
		<target ref="pickUp10"/>
		<label kind="synchronisation">pickUpBoxR1DONE?</label>
		<label kind="assignment">PpickUp1 = 2</label>
		</transition>		
		
		
		
		<transition>
		<source ref="pickUp10"/>
		<target ref="pickUp10s_doing_putDownBoxR1"/>
		<label kind="synchronisation">putDownBoxR1?</label>
		<label kind="assignment">PpickUp1 = 3</label>
		</transition>	
		<transition>
		<source ref="pickUp10s_doing_putDownBoxR1"/>
		<target ref="pickUp1_initial_location"/>
		<label kind="synchronisation">putDownBoxR1DONE?</label>
		<label kind="assignment">PpickUp1 = 0</label>
		</transition>	
		</template>
			

					
		<template>
		<name>pickUp2</name>
		//states declarions
		<location id="pickUp2_initial_location">
		</location>
		<location id="pickUp20f_doing_pickUpBoxR2">
		</location>
		<location id="pickUp20">
		</location>
		
		<location id="pickUp20s_doing_putDownBoxR2">
		</location>
		<init ref = "pickUp2_initial_location"/>	
		//transitions
		
		
		
		<transition>
		<source ref="pickUp2_initial_location"/>
		<target ref="pickUp20f_doing_pickUpBoxR2"/>
		<label kind="synchronisation">pickUpBoxR2?</label>
		<label kind="assignment">PpickUp2 = 1</label>
		</transition>	
		<transition>
		<source ref="pickUp20f_doing_pickUpBoxR2"/>
		<target ref="pickUp20"/>
		<label kind="synchronisation">pickUpBoxR2DONE?</label>
		<label kind="assignment">PpickUp2 = 2</label>
		</transition>		
		
		
		
		<transition>
		<source ref="pickUp20"/>
		<target ref="pickUp20s_doing_putDownBoxR2"/>
		<label kind="synchronisation">putDownBoxR2?</label>
		<label kind="assignment">PpickUp2 = 3</label>
		</transition>	
		<transition>
		<source ref="pickUp20s_doing_putDownBoxR2"/>
		<target ref="pickUp2_initial_location"/>
		<label kind="synchronisation">putDownBoxR2DONE?</label>
		<label kind="assignment">PpickUp2 = 0</label>
		</transition>	
		</template>
			

					
		<template>
		<name>pickUpH</name>
		//states declarions
		<location id="pickUpH_initial_location">
		</location>
		<location id="pickUpH0f_doing_pickUpBoxH">
		</location>
		<location id="pickUpH0">
		</location>
		
		<location id="pickUpH0s_doing_putDownBoxH">
		</location>
		<init ref = "pickUpH_initial_location"/>	
		//transitions
		
		
		
		<transition>
		<source ref="pickUpH_initial_location"/>
		<target ref="pickUpH0f_doing_pickUpBoxH"/>
		<label kind="synchronisation">pickUpBoxH?</label>
		<label kind="assignment">PpickUpH = 1</label>
		</transition>	
		<transition>
		<source ref="pickUpH0f_doing_pickUpBoxH"/>
		<target ref="pickUpH0"/>
		<label kind="synchronisation">pickUpBoxHDONE?</label>
		<label kind="assignment">PpickUpH = 2</label>
		</transition>		
		
		
		
		<transition>
		<source ref="pickUpH0"/>
		<target ref="pickUpH0s_doing_putDownBoxH"/>
		<label kind="synchronisation">putDownBoxH?</label>
		<label kind="assignment">PpickUpH = 3</label>
		</transition>	
		<transition>
		<source ref="pickUpH0s_doing_putDownBoxH"/>
		<target ref="pickUpH_initial_location"/>
		<label kind="synchronisation">putDownBoxHDONE?</label>
		<label kind="assignment">PpickUpH = 0</label>
		</transition>	
		</template>
agents
	<template>
	<name>bot1</name>
	 
	//no local declarations used
	 
	//LOCATIONS
	//nota: sto dando stesso ID a location su agneti diversi, spero non lo mandi a male
	//se lo user non definisce connesssioni tra tutte le location lui non smatta
<location id = "station">
<name>station</name>
</location>
 
		
	//location for durable actions (just one if it's locations specic and/or the agent isn't mobile )
<location id = "doing_pickUpBoxR1_in_station">
<name>doing_pickUpBoxR1_in_station</name>
<label kind="invariant">Cbot1&lt;=3</label>
</location>
		
<location id = "doing_screwR1_in_station">
<name>doing_screwR1_in_station</name>
<label kind="invariant">Cbot1&lt;=11</label>
</location>
		
<location id = "doing_putDownBoxR1_in_station">
<name>doing_putDownBoxR1_in_station</name>
<label kind="invariant">Cbot1&lt;=3</label>
</location>
		
					
		
		
		
	//initial location id is passed
	<init ref = "station"/>	
	
	
	
	
	//transitions
	//movement transitions
		
	//action transitions
	//BUG : if an action si collaborative but nobody can react to it, the action will be always allowed
	
<transition>
<source ref="station"/>
<target ref="doing_pickUpBoxR1_in_station"/>
<label kind="synchronisation">pickUpBoxR1!</label>
<label kind="assignment"> Cbot1 =0,Pbot1=-11 </label>
<label kind="guard">Cbot1 &gt; 1 &amp;&amp;    ( PworkFlow==1 )  &amp;&amp;  ( PpickUp1==0 ) </label>
</transition>
 
<transition>
<source ref="doing_pickUpBoxR1_in_station"/>
<target ref="station"/>
<label kind="synchronisation">pickUpBoxR1DONE!</label>
<label kind="assignment"> Cbot1 =0, Pbot1=1 </label>
<label kind="guard"> Cbot1 &gt; 2 &amp;&amp;   ( PworkFlow==2 )  &amp;&amp;  ( PpickUp1==1 ) </label>
</transition>			
 

<transition>
<source ref="station"/>
<target ref="doing_screwR1_in_station"/>
<label kind="synchronisation">screwR1!</label>
<label kind="assignment"> Cbot1 =0,Pbot1=-11 </label>
<label kind="guard">Cbot1 &gt; 1 &amp;&amp;    ( PworkFlow==5 )  &amp;&amp; SbusyR1==0</label>
</transition>
 
<transition>
<source ref="doing_screwR1_in_station"/>
<target ref="station"/>
<label kind="synchronisation">screwR1DONE!</label>
<label kind="assignment"> Cbot1 =0, Pbot1=1 </label>
<label kind="guard"> Cbot1 &gt; 10 &amp;&amp;   ( PworkFlow==6 ) </label>
</transition>			
 

<transition>
<source ref="station"/>
<target ref="doing_putDownBoxR1_in_station"/>
<label kind="synchronisation">putDownBoxR1!</label>
<label kind="assignment"> Cbot1 =0,Pbot1=-11 </label>
<label kind="guard">Cbot1 &gt; 1 &amp;&amp;    ( PworkFlow==9 )  &amp;&amp;  ( PpickUp1==2 ) </label>
</transition>
 
<transition>
<source ref="doing_putDownBoxR1_in_station"/>
<target ref="station"/>
<label kind="synchronisation">putDownBoxR1DONE!</label>
<label kind="assignment"> Cbot1 =0, Pbot1=1 </label>
<label kind="guard"> Cbot1 &gt; 2 &amp;&amp;   ( PworkFlow==10 )  &amp;&amp;  ( PpickUp1==3 ) </label>
</transition>			
 


<transition>
<source ref="station"/>
<target ref="station"/>
<label kind="synchronisation">done!</label>
<label kind="assignment"> Cbot1 =0 </label>
<label kind="guard">Cbot1 &gt; 1 &amp;&amp;   ( PworkFlow==13 ) </label>
</transition>
 		

					
		
		
		
	</template>		
	 
		
	<template>
	<name>bot2</name>
	 
	//no local declarations used
	 
	//LOCATIONS
	//nota: sto dando stesso ID a location su agneti diversi, spero non lo mandi a male
	//se lo user non definisce connesssioni tra tutte le location lui non smatta
<location id = "station">
<name>station</name>
</location>
 
		
	//location for durable actions (just one if it's locations specic and/or the agent isn't mobile )
<location id = "doing_pickUpBoxR2_in_station">
<name>doing_pickUpBoxR2_in_station</name>
<label kind="invariant">Cbot2&lt;=3</label>
</location>
		
<location id = "doing_screwR2_in_station">
<name>doing_screwR2_in_station</name>
<label kind="invariant">Cbot2&lt;=11</label>
</location>
		
<location id = "doing_putDownBoxR2_in_station">
<name>doing_putDownBoxR2_in_station</name>
<label kind="invariant">Cbot2&lt;=3</label>
</location>
		
					
		
		
		
	//initial location id is passed
	<init ref = "station"/>	
	
	
	
	
	//transitions
	//movement transitions
		
	//action transitions
	//BUG : if an action si collaborative but nobody can react to it, the action will be always allowed
	
<transition>
<source ref="station"/>
<target ref="doing_pickUpBoxR2_in_station"/>
<label kind="synchronisation">pickUpBoxR2!</label>
<label kind="assignment"> Cbot2 =0,Pbot2=-11 </label>
<label kind="guard">Cbot2 &gt; 1 &amp;&amp;    ( PworkFlow==1 )  &amp;&amp;  ( PpickUp2==0 ) </label>
</transition>
 
<transition>
<source ref="doing_pickUpBoxR2_in_station"/>
<target ref="station"/>
<label kind="synchronisation">pickUpBoxR2DONE!</label>
<label kind="assignment"> Cbot2 =0, Pbot2=1 </label>
<label kind="guard"> Cbot2 &gt; 2 &amp;&amp;   ( PworkFlow==3 )  &amp;&amp;  ( PpickUp2==1 ) </label>
</transition>			
 

<transition>
<source ref="station"/>
<target ref="doing_screwR2_in_station"/>
<label kind="synchronisation">screwR2!</label>
<label kind="assignment"> Cbot2 =0,Pbot2=-11 </label>
<label kind="guard">Cbot2 &gt; 1 &amp;&amp;    ( PworkFlow==5 )  &amp;&amp; SbusyR2==0</label>
</transition>
 
<transition>
<source ref="doing_screwR2_in_station"/>
<target ref="station"/>
<label kind="synchronisation">screwR2DONE!</label>
<label kind="assignment"> Cbot2 =0, Pbot2=1 </label>
<label kind="guard"> Cbot2 &gt; 10 &amp;&amp;   ( PworkFlow==7 ) </label>
</transition>			
 

<transition>
<source ref="station"/>
<target ref="doing_putDownBoxR2_in_station"/>
<label kind="synchronisation">putDownBoxR2!</label>
<label kind="assignment"> Cbot2 =0,Pbot2=-11 </label>
<label kind="guard">Cbot2 &gt; 1 &amp;&amp;    ( PworkFlow==9 )  &amp;&amp;  ( PpickUp2==2 ) </label>
</transition>
 
<transition>
<source ref="doing_putDownBoxR2_in_station"/>
<target ref="station"/>
<label kind="synchronisation">putDownBoxR2DONE!</label>
<label kind="assignment"> Cbot2 =0, Pbot2=1 </label>
<label kind="guard"> Cbot2 &gt; 2 &amp;&amp;   ( PworkFlow==11 )  &amp;&amp;  ( PpickUp2==3 ) </label>
</transition>			
 


<transition>
<source ref="station"/>
<target ref="station"/>
<label kind="synchronisation">done!</label>
<label kind="assignment"> Cbot2 =0 </label>
<label kind="guard">Cbot2 &gt; 1 &amp;&amp;   ( PworkFlow==13 ) </label>
</transition>
 		

					
		
		
		
	</template>		
	 
		
	<template>
	<name>human</name>
	 
	//no local declarations used
	 
	//LOCATIONS
	//nota: sto dando stesso ID a location su agneti diversi, spero non lo mandi a male
	//se lo user non definisce connesssioni tra tutte le location lui non smatta
<location id = "station">
<name>station</name>
</location>
 
		
	//location for durable actions (just one if it's locations specic and/or the agent isn't mobile )
<location id = "doing_pickUpBoxH_in_station">
<name>doing_pickUpBoxH_in_station</name>
<label kind="invariant">Chuman&lt;=3</label>
</location>
		
<location id = "doing_screwH_in_station">
<name>doing_screwH_in_station</name>
<label kind="invariant">Chuman&lt;=11</label>
</location>
		
<location id = "doing_putDownBoxH_in_station">
<name>doing_putDownBoxH_in_station</name>
<label kind="invariant">Chuman&lt;=3</label>
</location>
		
					
		
		
		
	//initial location id is passed
	<init ref = "station"/>	
	
	
	
	
	//transitions
	//movement transitions
		
	//action transitions
	//BUG : if an action si collaborative but nobody can react to it, the action will be always allowed
	
<transition controllable="false" >
<source ref="station"/>
<target ref="doing_pickUpBoxH_in_station"/>
<label kind="synchronisation">pickUpBoxH!</label>
<label kind="assignment"> Chuman =0,Phuman=-11 </label>
<label kind="guard">Chuman &gt; 1 &amp;&amp;    ( PworkFlow==1 )  &amp;&amp;  ( PpickUpH==0 ) </label>
</transition>
 
<transition controllable="false" >
<source ref="doing_pickUpBoxH_in_station"/>
<target ref="station"/>
<label kind="synchronisation">pickUpBoxHDONE!</label>
<label kind="assignment"> Chuman =0, Phuman=1 </label>
<label kind="guard"> Chuman &gt; 2 &amp;&amp;   ( PworkFlow==4 )  &amp;&amp;  ( PpickUpH==1 ) </label>
</transition>			
 

<transition controllable="false" >
<source ref="station"/>
<target ref="doing_screwH_in_station"/>
<label kind="synchronisation">screwH!</label>
<label kind="assignment"> Chuman =0,Phuman=-11 </label>
<label kind="guard">Chuman &gt; 1 &amp;&amp;    ( PworkFlow==5 )  &amp;&amp; SbusyH==0</label>
</transition>
 
<transition controllable="false" >
<source ref="doing_screwH_in_station"/>
<target ref="station"/>
<label kind="synchronisation">screwHDONE!</label>
<label kind="assignment"> Chuman =0, Phuman=1 </label>
<label kind="guard"> Chuman &gt; 10 &amp;&amp;   ( PworkFlow==8 ) </label>
</transition>			
 

<transition controllable="false" >
<source ref="station"/>
<target ref="doing_putDownBoxH_in_station"/>
<label kind="synchronisation">putDownBoxH!</label>
<label kind="assignment"> Chuman =0,Phuman=-11 </label>
<label kind="guard">Chuman &gt; 1 &amp;&amp;    ( PworkFlow==9 )  &amp;&amp;  ( PpickUpH==2 ) </label>
</transition>
 
<transition controllable="false" >
<source ref="doing_putDownBoxH_in_station"/>
<target ref="station"/>
<label kind="synchronisation">putDownBoxHDONE!</label>
<label kind="assignment"> Chuman =0, Phuman=1 </label>
<label kind="guard"> Chuman &gt; 2 &amp;&amp;   ( PworkFlow==12 )  &amp;&amp;  ( PpickUpH==3 ) </label>
</transition>			
 


<transition controllable="false" >
<source ref="station"/>
<target ref="station"/>
<label kind="synchronisation">done!</label>
<label kind="assignment"> Chuman =0 </label>
<label kind="guard">Chuman &gt; 1 &amp;&amp;   ( PworkFlow==13 ) </label>
</transition>
 		


<transition controllable="false" >
<source ref="station"/>
<target ref="station"/>
<label kind="synchronisation">newBox!</label>
<label kind="assignment"> Chuman =0 </label>
<label kind="guard">Chuman &gt; 1 &amp;&amp;   ( PworkFlow==0 ) </label>
</transition>
 		

					
		
		
		
	</template>		
	 
		



	
objectives

<template>
<name>obj</name>

//locations declaration

<location id = "idle">
<name>idle</name>
</location>

<location id = "lose">
<name>lose</name>
</location>		

<location id = "atRisk">
<name>atRisk</name>
<label kind="invariant"> Cobj &lt;= 30</label>
</location>	
<init ref = "idle"/>	
	
//transition declaration
 
<transition>
<source ref="idle"/>
<target ref="atRisk"/>
<label kind="synchronisation">newBox?</label>
<label kind = "assignment">Cobj = 0</label>
</transition>

<transition>
<source ref="atRisk"/>
<target ref="idle"/>
<label kind="synchronisation">done?</label>
</transition>				
<transition>
<source ref="atRisk"/>
<target ref="lose"/>
</transition>				
</template>

	//in questo momento bugga se non ci sono regole
	<system>
	system states, bot1, bot2, human, obj , workFlow, pickUp1, pickUp2, pickUpH;
	
	
	
	</system>

	
	</nta>
