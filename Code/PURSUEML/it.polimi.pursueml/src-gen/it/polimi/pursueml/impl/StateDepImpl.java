/**
 * generated by Xtext 2.17.0.M1
 */
package it.polimi.pursueml.impl;

import it.polimi.pursueml.Event;
import it.polimi.pursueml.PursuemlPackage;
import it.polimi.pursueml.StateDep;
import it.polimi.pursueml.Stato;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>State Dep</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.polimi.pursueml.impl.StateDepImpl#getEvento <em>Evento</em>}</li>
 *   <li>{@link it.polimi.pursueml.impl.StateDepImpl#getStat <em>Stat</em>}</li>
 *   <li>{@link it.polimi.pursueml.impl.StateDepImpl#isTr <em>Tr</em>}</li>
 *   <li>{@link it.polimi.pursueml.impl.StateDepImpl#isFl <em>Fl</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StateDepImpl extends MinimalEObjectImpl.Container implements StateDep
{
  /**
   * The cached value of the '{@link #getEvento() <em>Evento</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvento()
   * @generated
   * @ordered
   */
  protected Event evento;

  /**
   * The cached value of the '{@link #getStat() <em>Stat</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStat()
   * @generated
   * @ordered
   */
  protected Stato stat;

  /**
   * The default value of the '{@link #isTr() <em>Tr</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTr()
   * @generated
   * @ordered
   */
  protected static final boolean TR_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isTr() <em>Tr</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTr()
   * @generated
   * @ordered
   */
  protected boolean tr = TR_EDEFAULT;

  /**
   * The default value of the '{@link #isFl() <em>Fl</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFl()
   * @generated
   * @ordered
   */
  protected static final boolean FL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isFl() <em>Fl</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFl()
   * @generated
   * @ordered
   */
  protected boolean fl = FL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StateDepImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PursuemlPackage.Literals.STATE_DEP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Event getEvento()
  {
    if (evento != null && evento.eIsProxy())
    {
      InternalEObject oldEvento = (InternalEObject)evento;
      evento = (Event)eResolveProxy(oldEvento);
      if (evento != oldEvento)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PursuemlPackage.STATE_DEP__EVENTO, oldEvento, evento));
      }
    }
    return evento;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Event basicGetEvento()
  {
    return evento;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEvento(Event newEvento)
  {
    Event oldEvento = evento;
    evento = newEvento;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuemlPackage.STATE_DEP__EVENTO, oldEvento, evento));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Stato getStat()
  {
    if (stat != null && stat.eIsProxy())
    {
      InternalEObject oldStat = (InternalEObject)stat;
      stat = (Stato)eResolveProxy(oldStat);
      if (stat != oldStat)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PursuemlPackage.STATE_DEP__STAT, oldStat, stat));
      }
    }
    return stat;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Stato basicGetStat()
  {
    return stat;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStat(Stato newStat)
  {
    Stato oldStat = stat;
    stat = newStat;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuemlPackage.STATE_DEP__STAT, oldStat, stat));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isTr()
  {
    return tr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTr(boolean newTr)
  {
    boolean oldTr = tr;
    tr = newTr;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuemlPackage.STATE_DEP__TR, oldTr, tr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isFl()
  {
    return fl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFl(boolean newFl)
  {
    boolean oldFl = fl;
    fl = newFl;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuemlPackage.STATE_DEP__FL, oldFl, fl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PursuemlPackage.STATE_DEP__EVENTO:
        if (resolve) return getEvento();
        return basicGetEvento();
      case PursuemlPackage.STATE_DEP__STAT:
        if (resolve) return getStat();
        return basicGetStat();
      case PursuemlPackage.STATE_DEP__TR:
        return isTr();
      case PursuemlPackage.STATE_DEP__FL:
        return isFl();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PursuemlPackage.STATE_DEP__EVENTO:
        setEvento((Event)newValue);
        return;
      case PursuemlPackage.STATE_DEP__STAT:
        setStat((Stato)newValue);
        return;
      case PursuemlPackage.STATE_DEP__TR:
        setTr((Boolean)newValue);
        return;
      case PursuemlPackage.STATE_DEP__FL:
        setFl((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PursuemlPackage.STATE_DEP__EVENTO:
        setEvento((Event)null);
        return;
      case PursuemlPackage.STATE_DEP__STAT:
        setStat((Stato)null);
        return;
      case PursuemlPackage.STATE_DEP__TR:
        setTr(TR_EDEFAULT);
        return;
      case PursuemlPackage.STATE_DEP__FL:
        setFl(FL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PursuemlPackage.STATE_DEP__EVENTO:
        return evento != null;
      case PursuemlPackage.STATE_DEP__STAT:
        return stat != null;
      case PursuemlPackage.STATE_DEP__TR:
        return tr != TR_EDEFAULT;
      case PursuemlPackage.STATE_DEP__FL:
        return fl != FL_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (tr: ");
    result.append(tr);
    result.append(", fl: ");
    result.append(fl);
    result.append(')');
    return result.toString();
  }

} //StateDepImpl
