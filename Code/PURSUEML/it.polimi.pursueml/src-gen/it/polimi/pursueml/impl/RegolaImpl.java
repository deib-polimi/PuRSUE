/**
 * generated by Xtext 2.17.0.M1
 */
package it.polimi.pursueml.impl;

import it.polimi.pursueml.Event;
import it.polimi.pursueml.PursuemlPackage;
import it.polimi.pursueml.Regola;
import it.polimi.pursueml.Sequence;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Regola</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.polimi.pursueml.impl.RegolaImpl#getName <em>Name</em>}</li>
 *   <li>{@link it.polimi.pursueml.impl.RegolaImpl#getFirst_ev <em>First ev</em>}</li>
 *   <li>{@link it.polimi.pursueml.impl.RegolaImpl#isIs_seq1 <em>Is seq1</em>}</li>
 *   <li>{@link it.polimi.pursueml.impl.RegolaImpl#getFirst_seq <em>First seq</em>}</li>
 *   <li>{@link it.polimi.pursueml.impl.RegolaImpl#isThen <em>Then</em>}</li>
 *   <li>{@link it.polimi.pursueml.impl.RegolaImpl#isOr <em>Or</em>}</li>
 *   <li>{@link it.polimi.pursueml.impl.RegolaImpl#getSecond_ev <em>Second ev</em>}</li>
 *   <li>{@link it.polimi.pursueml.impl.RegolaImpl#isIs_seq2 <em>Is seq2</em>}</li>
 *   <li>{@link it.polimi.pursueml.impl.RegolaImpl#getSecond_seq <em>Second seq</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RegolaImpl extends MinimalEObjectImpl.Container implements Regola
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getFirst_ev() <em>First ev</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFirst_ev()
   * @generated
   * @ordered
   */
  protected Event first_ev;

  /**
   * The default value of the '{@link #isIs_seq1() <em>Is seq1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIs_seq1()
   * @generated
   * @ordered
   */
  protected static final boolean IS_SEQ1_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isIs_seq1() <em>Is seq1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIs_seq1()
   * @generated
   * @ordered
   */
  protected boolean is_seq1 = IS_SEQ1_EDEFAULT;

  /**
   * The cached value of the '{@link #getFirst_seq() <em>First seq</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFirst_seq()
   * @generated
   * @ordered
   */
  protected Sequence first_seq;

  /**
   * The default value of the '{@link #isThen() <em>Then</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isThen()
   * @generated
   * @ordered
   */
  protected static final boolean THEN_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isThen() <em>Then</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isThen()
   * @generated
   * @ordered
   */
  protected boolean then = THEN_EDEFAULT;

  /**
   * The default value of the '{@link #isOr() <em>Or</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOr()
   * @generated
   * @ordered
   */
  protected static final boolean OR_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isOr() <em>Or</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOr()
   * @generated
   * @ordered
   */
  protected boolean or = OR_EDEFAULT;

  /**
   * The cached value of the '{@link #getSecond_ev() <em>Second ev</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecond_ev()
   * @generated
   * @ordered
   */
  protected Event second_ev;

  /**
   * The default value of the '{@link #isIs_seq2() <em>Is seq2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIs_seq2()
   * @generated
   * @ordered
   */
  protected static final boolean IS_SEQ2_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isIs_seq2() <em>Is seq2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIs_seq2()
   * @generated
   * @ordered
   */
  protected boolean is_seq2 = IS_SEQ2_EDEFAULT;

  /**
   * The cached value of the '{@link #getSecond_seq() <em>Second seq</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecond_seq()
   * @generated
   * @ordered
   */
  protected Sequence second_seq;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RegolaImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PursuemlPackage.Literals.REGOLA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuemlPackage.REGOLA__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Event getFirst_ev()
  {
    if (first_ev != null && first_ev.eIsProxy())
    {
      InternalEObject oldFirst_ev = (InternalEObject)first_ev;
      first_ev = (Event)eResolveProxy(oldFirst_ev);
      if (first_ev != oldFirst_ev)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PursuemlPackage.REGOLA__FIRST_EV, oldFirst_ev, first_ev));
      }
    }
    return first_ev;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Event basicGetFirst_ev()
  {
    return first_ev;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFirst_ev(Event newFirst_ev)
  {
    Event oldFirst_ev = first_ev;
    first_ev = newFirst_ev;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuemlPackage.REGOLA__FIRST_EV, oldFirst_ev, first_ev));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isIs_seq1()
  {
    return is_seq1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIs_seq1(boolean newIs_seq1)
  {
    boolean oldIs_seq1 = is_seq1;
    is_seq1 = newIs_seq1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuemlPackage.REGOLA__IS_SEQ1, oldIs_seq1, is_seq1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Sequence getFirst_seq()
  {
    return first_seq;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFirst_seq(Sequence newFirst_seq, NotificationChain msgs)
  {
    Sequence oldFirst_seq = first_seq;
    first_seq = newFirst_seq;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PursuemlPackage.REGOLA__FIRST_SEQ, oldFirst_seq, newFirst_seq);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFirst_seq(Sequence newFirst_seq)
  {
    if (newFirst_seq != first_seq)
    {
      NotificationChain msgs = null;
      if (first_seq != null)
        msgs = ((InternalEObject)first_seq).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PursuemlPackage.REGOLA__FIRST_SEQ, null, msgs);
      if (newFirst_seq != null)
        msgs = ((InternalEObject)newFirst_seq).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PursuemlPackage.REGOLA__FIRST_SEQ, null, msgs);
      msgs = basicSetFirst_seq(newFirst_seq, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuemlPackage.REGOLA__FIRST_SEQ, newFirst_seq, newFirst_seq));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isThen()
  {
    return then;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setThen(boolean newThen)
  {
    boolean oldThen = then;
    then = newThen;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuemlPackage.REGOLA__THEN, oldThen, then));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isOr()
  {
    return or;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOr(boolean newOr)
  {
    boolean oldOr = or;
    or = newOr;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuemlPackage.REGOLA__OR, oldOr, or));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Event getSecond_ev()
  {
    if (second_ev != null && second_ev.eIsProxy())
    {
      InternalEObject oldSecond_ev = (InternalEObject)second_ev;
      second_ev = (Event)eResolveProxy(oldSecond_ev);
      if (second_ev != oldSecond_ev)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PursuemlPackage.REGOLA__SECOND_EV, oldSecond_ev, second_ev));
      }
    }
    return second_ev;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Event basicGetSecond_ev()
  {
    return second_ev;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSecond_ev(Event newSecond_ev)
  {
    Event oldSecond_ev = second_ev;
    second_ev = newSecond_ev;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuemlPackage.REGOLA__SECOND_EV, oldSecond_ev, second_ev));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isIs_seq2()
  {
    return is_seq2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIs_seq2(boolean newIs_seq2)
  {
    boolean oldIs_seq2 = is_seq2;
    is_seq2 = newIs_seq2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuemlPackage.REGOLA__IS_SEQ2, oldIs_seq2, is_seq2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Sequence getSecond_seq()
  {
    return second_seq;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSecond_seq(Sequence newSecond_seq, NotificationChain msgs)
  {
    Sequence oldSecond_seq = second_seq;
    second_seq = newSecond_seq;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PursuemlPackage.REGOLA__SECOND_SEQ, oldSecond_seq, newSecond_seq);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSecond_seq(Sequence newSecond_seq)
  {
    if (newSecond_seq != second_seq)
    {
      NotificationChain msgs = null;
      if (second_seq != null)
        msgs = ((InternalEObject)second_seq).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PursuemlPackage.REGOLA__SECOND_SEQ, null, msgs);
      if (newSecond_seq != null)
        msgs = ((InternalEObject)newSecond_seq).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PursuemlPackage.REGOLA__SECOND_SEQ, null, msgs);
      msgs = basicSetSecond_seq(newSecond_seq, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuemlPackage.REGOLA__SECOND_SEQ, newSecond_seq, newSecond_seq));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PursuemlPackage.REGOLA__FIRST_SEQ:
        return basicSetFirst_seq(null, msgs);
      case PursuemlPackage.REGOLA__SECOND_SEQ:
        return basicSetSecond_seq(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PursuemlPackage.REGOLA__NAME:
        return getName();
      case PursuemlPackage.REGOLA__FIRST_EV:
        if (resolve) return getFirst_ev();
        return basicGetFirst_ev();
      case PursuemlPackage.REGOLA__IS_SEQ1:
        return isIs_seq1();
      case PursuemlPackage.REGOLA__FIRST_SEQ:
        return getFirst_seq();
      case PursuemlPackage.REGOLA__THEN:
        return isThen();
      case PursuemlPackage.REGOLA__OR:
        return isOr();
      case PursuemlPackage.REGOLA__SECOND_EV:
        if (resolve) return getSecond_ev();
        return basicGetSecond_ev();
      case PursuemlPackage.REGOLA__IS_SEQ2:
        return isIs_seq2();
      case PursuemlPackage.REGOLA__SECOND_SEQ:
        return getSecond_seq();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PursuemlPackage.REGOLA__NAME:
        setName((String)newValue);
        return;
      case PursuemlPackage.REGOLA__FIRST_EV:
        setFirst_ev((Event)newValue);
        return;
      case PursuemlPackage.REGOLA__IS_SEQ1:
        setIs_seq1((Boolean)newValue);
        return;
      case PursuemlPackage.REGOLA__FIRST_SEQ:
        setFirst_seq((Sequence)newValue);
        return;
      case PursuemlPackage.REGOLA__THEN:
        setThen((Boolean)newValue);
        return;
      case PursuemlPackage.REGOLA__OR:
        setOr((Boolean)newValue);
        return;
      case PursuemlPackage.REGOLA__SECOND_EV:
        setSecond_ev((Event)newValue);
        return;
      case PursuemlPackage.REGOLA__IS_SEQ2:
        setIs_seq2((Boolean)newValue);
        return;
      case PursuemlPackage.REGOLA__SECOND_SEQ:
        setSecond_seq((Sequence)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PursuemlPackage.REGOLA__NAME:
        setName(NAME_EDEFAULT);
        return;
      case PursuemlPackage.REGOLA__FIRST_EV:
        setFirst_ev((Event)null);
        return;
      case PursuemlPackage.REGOLA__IS_SEQ1:
        setIs_seq1(IS_SEQ1_EDEFAULT);
        return;
      case PursuemlPackage.REGOLA__FIRST_SEQ:
        setFirst_seq((Sequence)null);
        return;
      case PursuemlPackage.REGOLA__THEN:
        setThen(THEN_EDEFAULT);
        return;
      case PursuemlPackage.REGOLA__OR:
        setOr(OR_EDEFAULT);
        return;
      case PursuemlPackage.REGOLA__SECOND_EV:
        setSecond_ev((Event)null);
        return;
      case PursuemlPackage.REGOLA__IS_SEQ2:
        setIs_seq2(IS_SEQ2_EDEFAULT);
        return;
      case PursuemlPackage.REGOLA__SECOND_SEQ:
        setSecond_seq((Sequence)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PursuemlPackage.REGOLA__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case PursuemlPackage.REGOLA__FIRST_EV:
        return first_ev != null;
      case PursuemlPackage.REGOLA__IS_SEQ1:
        return is_seq1 != IS_SEQ1_EDEFAULT;
      case PursuemlPackage.REGOLA__FIRST_SEQ:
        return first_seq != null;
      case PursuemlPackage.REGOLA__THEN:
        return then != THEN_EDEFAULT;
      case PursuemlPackage.REGOLA__OR:
        return or != OR_EDEFAULT;
      case PursuemlPackage.REGOLA__SECOND_EV:
        return second_ev != null;
      case PursuemlPackage.REGOLA__IS_SEQ2:
        return is_seq2 != IS_SEQ2_EDEFAULT;
      case PursuemlPackage.REGOLA__SECOND_SEQ:
        return second_seq != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", is_seq1: ");
    result.append(is_seq1);
    result.append(", then: ");
    result.append(then);
    result.append(", or: ");
    result.append(or);
    result.append(", is_seq2: ");
    result.append(is_seq2);
    result.append(')');
    return result.toString();
  }

} //RegolaImpl
