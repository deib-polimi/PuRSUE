/**
 * generated by Xtext 2.17.0.M1
 */
package it.polimi.pursueml.impl;

import it.polimi.pursueml.Agent;
import it.polimi.pursueml.Event;
import it.polimi.pursueml.Pdi;
import it.polimi.pursueml.PursuemlPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Agent</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.polimi.pursueml.impl.AgentImpl#getName <em>Name</em>}</li>
 *   <li>{@link it.polimi.pursueml.impl.AgentImpl#isControllable <em>Controllable</em>}</li>
 *   <li>{@link it.polimi.pursueml.impl.AgentImpl#isMobile <em>Mobile</em>}</li>
 *   <li>{@link it.polimi.pursueml.impl.AgentImpl#getSpeed <em>Speed</em>}</li>
 *   <li>{@link it.polimi.pursueml.impl.AgentImpl#getInitial_location <em>Initial location</em>}</li>
 *   <li>{@link it.polimi.pursueml.impl.AgentImpl#getActions <em>Actions</em>}</li>
 *   <li>{@link it.polimi.pursueml.impl.AgentImpl#getReactions <em>Reactions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AgentImpl extends MinimalEObjectImpl.Container implements Agent
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #isControllable() <em>Controllable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isControllable()
   * @generated
   * @ordered
   */
  protected static final boolean CONTROLLABLE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isControllable() <em>Controllable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isControllable()
   * @generated
   * @ordered
   */
  protected boolean controllable = CONTROLLABLE_EDEFAULT;

  /**
   * The default value of the '{@link #isMobile() <em>Mobile</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMobile()
   * @generated
   * @ordered
   */
  protected static final boolean MOBILE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isMobile() <em>Mobile</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMobile()
   * @generated
   * @ordered
   */
  protected boolean mobile = MOBILE_EDEFAULT;

  /**
   * The default value of the '{@link #getSpeed() <em>Speed</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpeed()
   * @generated
   * @ordered
   */
  protected static final int SPEED_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getSpeed() <em>Speed</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpeed()
   * @generated
   * @ordered
   */
  protected int speed = SPEED_EDEFAULT;

  /**
   * The cached value of the '{@link #getInitial_location() <em>Initial location</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInitial_location()
   * @generated
   * @ordered
   */
  protected Pdi initial_location;

  /**
   * The cached value of the '{@link #getActions() <em>Actions</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActions()
   * @generated
   * @ordered
   */
  protected EList<Event> actions;

  /**
   * The cached value of the '{@link #getReactions() <em>Reactions</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReactions()
   * @generated
   * @ordered
   */
  protected EList<Event> reactions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AgentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PursuemlPackage.Literals.AGENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuemlPackage.AGENT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isControllable()
  {
    return controllable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setControllable(boolean newControllable)
  {
    boolean oldControllable = controllable;
    controllable = newControllable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuemlPackage.AGENT__CONTROLLABLE, oldControllable, controllable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isMobile()
  {
    return mobile;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMobile(boolean newMobile)
  {
    boolean oldMobile = mobile;
    mobile = newMobile;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuemlPackage.AGENT__MOBILE, oldMobile, mobile));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getSpeed()
  {
    return speed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSpeed(int newSpeed)
  {
    int oldSpeed = speed;
    speed = newSpeed;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuemlPackage.AGENT__SPEED, oldSpeed, speed));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Pdi getInitial_location()
  {
    if (initial_location != null && initial_location.eIsProxy())
    {
      InternalEObject oldInitial_location = (InternalEObject)initial_location;
      initial_location = (Pdi)eResolveProxy(oldInitial_location);
      if (initial_location != oldInitial_location)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PursuemlPackage.AGENT__INITIAL_LOCATION, oldInitial_location, initial_location));
      }
    }
    return initial_location;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Pdi basicGetInitial_location()
  {
    return initial_location;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInitial_location(Pdi newInitial_location)
  {
    Pdi oldInitial_location = initial_location;
    initial_location = newInitial_location;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuemlPackage.AGENT__INITIAL_LOCATION, oldInitial_location, initial_location));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Event> getActions()
  {
    if (actions == null)
    {
      actions = new EObjectResolvingEList<Event>(Event.class, this, PursuemlPackage.AGENT__ACTIONS);
    }
    return actions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Event> getReactions()
  {
    if (reactions == null)
    {
      reactions = new EObjectResolvingEList<Event>(Event.class, this, PursuemlPackage.AGENT__REACTIONS);
    }
    return reactions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PursuemlPackage.AGENT__NAME:
        return getName();
      case PursuemlPackage.AGENT__CONTROLLABLE:
        return isControllable();
      case PursuemlPackage.AGENT__MOBILE:
        return isMobile();
      case PursuemlPackage.AGENT__SPEED:
        return getSpeed();
      case PursuemlPackage.AGENT__INITIAL_LOCATION:
        if (resolve) return getInitial_location();
        return basicGetInitial_location();
      case PursuemlPackage.AGENT__ACTIONS:
        return getActions();
      case PursuemlPackage.AGENT__REACTIONS:
        return getReactions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PursuemlPackage.AGENT__NAME:
        setName((String)newValue);
        return;
      case PursuemlPackage.AGENT__CONTROLLABLE:
        setControllable((Boolean)newValue);
        return;
      case PursuemlPackage.AGENT__MOBILE:
        setMobile((Boolean)newValue);
        return;
      case PursuemlPackage.AGENT__SPEED:
        setSpeed((Integer)newValue);
        return;
      case PursuemlPackage.AGENT__INITIAL_LOCATION:
        setInitial_location((Pdi)newValue);
        return;
      case PursuemlPackage.AGENT__ACTIONS:
        getActions().clear();
        getActions().addAll((Collection<? extends Event>)newValue);
        return;
      case PursuemlPackage.AGENT__REACTIONS:
        getReactions().clear();
        getReactions().addAll((Collection<? extends Event>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PursuemlPackage.AGENT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case PursuemlPackage.AGENT__CONTROLLABLE:
        setControllable(CONTROLLABLE_EDEFAULT);
        return;
      case PursuemlPackage.AGENT__MOBILE:
        setMobile(MOBILE_EDEFAULT);
        return;
      case PursuemlPackage.AGENT__SPEED:
        setSpeed(SPEED_EDEFAULT);
        return;
      case PursuemlPackage.AGENT__INITIAL_LOCATION:
        setInitial_location((Pdi)null);
        return;
      case PursuemlPackage.AGENT__ACTIONS:
        getActions().clear();
        return;
      case PursuemlPackage.AGENT__REACTIONS:
        getReactions().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PursuemlPackage.AGENT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case PursuemlPackage.AGENT__CONTROLLABLE:
        return controllable != CONTROLLABLE_EDEFAULT;
      case PursuemlPackage.AGENT__MOBILE:
        return mobile != MOBILE_EDEFAULT;
      case PursuemlPackage.AGENT__SPEED:
        return speed != SPEED_EDEFAULT;
      case PursuemlPackage.AGENT__INITIAL_LOCATION:
        return initial_location != null;
      case PursuemlPackage.AGENT__ACTIONS:
        return actions != null && !actions.isEmpty();
      case PursuemlPackage.AGENT__REACTIONS:
        return reactions != null && !reactions.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", controllable: ");
    result.append(controllable);
    result.append(", mobile: ");
    result.append(mobile);
    result.append(", speed: ");
    result.append(speed);
    result.append(')');
    return result.toString();
  }

} //AgentImpl
