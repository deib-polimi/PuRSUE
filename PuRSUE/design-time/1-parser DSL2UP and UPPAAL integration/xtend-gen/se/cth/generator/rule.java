/**
 * generated by Xtext 2.14.0
 */
package se.cth.generator;

import com.google.common.base.Objects;
import java.util.ArrayList;
import java.util.List;
import org.eclipse.xtend2.lib.StringConcatenation;
import se.cth.generator.state;

@SuppressWarnings("all")
public class rule {
  public List<state> lista_stati;
  
  public String nome_regola;
  
  public rule(final String name) {
    ArrayList<state> _arrayList = new ArrayList<state>();
    this.lista_stati = _arrayList;
    this.nome_regola = name;
  }
  
  public int indice(final String state_name) {
    int i = 0;
    boolean flag = false;
    boolean _isEmpty = this.lista_stati.isEmpty();
    if (_isEmpty) {
      return (-1);
    }
    while (((i < this.lista_stati.size()) && (!flag))) {
      boolean _equals = Objects.equal(this.lista_stati.get(i).ID, state_name);
      if (_equals) {
        flag = true;
      } else {
        i++;
      }
    }
    if (flag) {
      return i;
    } else {
      return (-1);
    }
  }
  
  public boolean add_state(final String nuovo) {
    boolean _xblockexpression = false;
    {
      int i = 0;
      boolean flag = true;
      while ((i < this.lista_stati.size())) {
        {
          boolean _equals = Objects.equal(this.lista_stati.get(i).ID, nuovo);
          if (_equals) {
            flag = false;
          }
          i++;
        }
      }
      boolean _xifexpression = false;
      if (flag) {
        boolean _xblockexpression_1 = false;
        {
          state stato = new state(nuovo);
          _xblockexpression_1 = this.lista_stati.add(stato);
        }
        _xifexpression = _xblockexpression_1;
      }
      _xblockexpression = _xifexpression;
    }
    return _xblockexpression;
  }
  
  public void add_action_at(final String action_name, final String state_name) {
    int _indice = this.indice(state_name);
    boolean _notEquals = (_indice != (-1));
    if (_notEquals) {
      this.lista_stati.get(this.indice(state_name)).add_action(action_name);
    }
  }
  
  public CharSequence print_rule() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("stati in");
    _builder.append(this.nome_regola);
    _builder.append(":");
    _builder.newLineIfNotEmpty();
    {
      boolean _isEmpty = this.lista_stati.isEmpty();
      boolean _not = (!_isEmpty);
      if (_not) {
        {
          for(final state state : this.lista_stati) {
            CharSequence _print_state = state.print_state();
            _builder.append(_print_state);
            _builder.newLineIfNotEmpty();
          }
        }
      }
    }
    return _builder;
  }
}
