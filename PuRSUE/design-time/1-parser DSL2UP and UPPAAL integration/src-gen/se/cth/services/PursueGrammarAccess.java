/*
 * generated by Xtext 2.14.0
 */
package se.cth.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class PursueGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "se.cth.Pursue.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLocationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cLocationsPdiParserRuleCall_0_0 = (RuleCall)cLocationsAssignment_0.eContents().get(0);
		private final Assignment cConnectionsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cConnectionsConnectionParserRuleCall_1_0 = (RuleCall)cConnectionsAssignment_1.eContents().get(0);
		private final Assignment cEventsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEventsEventParserRuleCall_2_0 = (RuleCall)cEventsAssignment_2.eContents().get(0);
		private final Assignment cRegoleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRegoleRegolaParserRuleCall_3_0 = (RuleCall)cRegoleAssignment_3.eContents().get(0);
		private final Assignment cStatiAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cStatiStatoParserRuleCall_4_0 = (RuleCall)cStatiAssignment_4.eContents().get(0);
		private final Assignment cDipendenzeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDipendenzeStateDepParserRuleCall_5_0 = (RuleCall)cDipendenzeAssignment_5.eContents().get(0);
		private final Assignment cAgentsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAgentsAgentParserRuleCall_6_0 = (RuleCall)cAgentsAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Assignment cHave_objAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final Keyword cHave_objObjectiveKeyword_7_0_0 = (Keyword)cHave_objAssignment_7_0.eContents().get(0);
		private final Assignment cObjectiveAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cObjectiveObjectiveParserRuleCall_7_1_0 = (RuleCall)cObjectiveAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Assignment cHave_reach_objAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final Keyword cHave_reach_objReach_objectiveKeyword_8_0_0 = (Keyword)cHave_reach_objAssignment_8_0.eContents().get(0);
		private final Assignment cReachobjectiveAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cReachobjectiveReachObjectiveParserRuleCall_8_1_0 = (RuleCall)cReachobjectiveAssignment_8_1.eContents().get(0);
		
		//Model:
		//	locations+=Pdi*
		//	connections+=connection*
		//	events+=Event*
		//	regole+=Regola*
		//	stati+=Stato*
		//	dipendenze+=StateDep*
		//	agents+=Agent* (have_obj?='objective:' objective=Objective)? (have_reach_obj?='reach_objective:'
		//	reachobjective=ReachObjective)?;
		@Override public ParserRule getRule() { return rule; }
		
		//locations+=Pdi* connections+=connection* events+=Event* regole+=Regola* stati+=Stato* dipendenze+=StateDep*
		//agents+=Agent* (have_obj?='objective:' objective=Objective)? (have_reach_obj?='reach_objective:'
		//reachobjective=ReachObjective)?
		public Group getGroup() { return cGroup; }
		
		//locations+=Pdi*
		public Assignment getLocationsAssignment_0() { return cLocationsAssignment_0; }
		
		//Pdi
		public RuleCall getLocationsPdiParserRuleCall_0_0() { return cLocationsPdiParserRuleCall_0_0; }
		
		//connections+=connection*
		public Assignment getConnectionsAssignment_1() { return cConnectionsAssignment_1; }
		
		//connection
		public RuleCall getConnectionsConnectionParserRuleCall_1_0() { return cConnectionsConnectionParserRuleCall_1_0; }
		
		//events+=Event*
		public Assignment getEventsAssignment_2() { return cEventsAssignment_2; }
		
		//Event
		public RuleCall getEventsEventParserRuleCall_2_0() { return cEventsEventParserRuleCall_2_0; }
		
		//regole+=Regola*
		public Assignment getRegoleAssignment_3() { return cRegoleAssignment_3; }
		
		//Regola
		public RuleCall getRegoleRegolaParserRuleCall_3_0() { return cRegoleRegolaParserRuleCall_3_0; }
		
		//stati+=Stato*
		public Assignment getStatiAssignment_4() { return cStatiAssignment_4; }
		
		//Stato
		public RuleCall getStatiStatoParserRuleCall_4_0() { return cStatiStatoParserRuleCall_4_0; }
		
		//dipendenze+=StateDep*
		public Assignment getDipendenzeAssignment_5() { return cDipendenzeAssignment_5; }
		
		//StateDep
		public RuleCall getDipendenzeStateDepParserRuleCall_5_0() { return cDipendenzeStateDepParserRuleCall_5_0; }
		
		//agents+=Agent*
		public Assignment getAgentsAssignment_6() { return cAgentsAssignment_6; }
		
		//Agent
		public RuleCall getAgentsAgentParserRuleCall_6_0() { return cAgentsAgentParserRuleCall_6_0; }
		
		//(have_obj?='objective:' objective=Objective)?
		public Group getGroup_7() { return cGroup_7; }
		
		//have_obj?='objective:'
		public Assignment getHave_objAssignment_7_0() { return cHave_objAssignment_7_0; }
		
		//'objective:'
		public Keyword getHave_objObjectiveKeyword_7_0_0() { return cHave_objObjectiveKeyword_7_0_0; }
		
		//objective=Objective
		public Assignment getObjectiveAssignment_7_1() { return cObjectiveAssignment_7_1; }
		
		//Objective
		public RuleCall getObjectiveObjectiveParserRuleCall_7_1_0() { return cObjectiveObjectiveParserRuleCall_7_1_0; }
		
		//(have_reach_obj?='reach_objective:' reachobjective=ReachObjective)?
		public Group getGroup_8() { return cGroup_8; }
		
		//have_reach_obj?='reach_objective:'
		public Assignment getHave_reach_objAssignment_8_0() { return cHave_reach_objAssignment_8_0; }
		
		//'reach_objective:'
		public Keyword getHave_reach_objReach_objectiveKeyword_8_0_0() { return cHave_reach_objReach_objectiveKeyword_8_0_0; }
		
		//reachobjective=ReachObjective
		public Assignment getReachobjectiveAssignment_8_1() { return cReachobjectiveAssignment_8_1; }
		
		//ReachObjective
		public RuleCall getReachobjectiveReachObjectiveParserRuleCall_8_1_0() { return cReachobjectiveReachObjectiveParserRuleCall_8_1_0; }
	}
	public class PdiElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "se.cth.Pursue.Pdi");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPoiKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Pdi:
		//	'poi' name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'poi' name=STRING
		public Group getGroup() { return cGroup; }
		
		//'poi'
		public Keyword getPoiKeyword_0() { return cPoiKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
	}
	public class ConnectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "se.cth.Pursue.connection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConnectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPdi1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPdi1PdiCrossReference_1_0 = (CrossReference)cPdi1Assignment_1.eContents().get(0);
		private final RuleCall cPdi1PdiIDTerminalRuleCall_1_0_1 = (RuleCall)cPdi1PdiCrossReference_1_0.eContents().get(1);
		private final Keyword cAndKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPdi2Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cPdi2PdiCrossReference_3_0 = (CrossReference)cPdi2Assignment_3.eContents().get(0);
		private final RuleCall cPdi2PdiIDTerminalRuleCall_3_0_1 = (RuleCall)cPdi2PdiCrossReference_3_0.eContents().get(1);
		private final Keyword cDistanceKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDistanceAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDistanceINTTerminalRuleCall_5_0 = (RuleCall)cDistanceAssignment_5.eContents().get(0);
		
		//connection:
		//	'connect' pdi1=[Pdi] 'and' pdi2=[Pdi] 'distance' distance=INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'connect' pdi1=[Pdi] 'and' pdi2=[Pdi] 'distance' distance=INT
		public Group getGroup() { return cGroup; }
		
		//'connect'
		public Keyword getConnectKeyword_0() { return cConnectKeyword_0; }
		
		//pdi1=[Pdi]
		public Assignment getPdi1Assignment_1() { return cPdi1Assignment_1; }
		
		//[Pdi]
		public CrossReference getPdi1PdiCrossReference_1_0() { return cPdi1PdiCrossReference_1_0; }
		
		//ID
		public RuleCall getPdi1PdiIDTerminalRuleCall_1_0_1() { return cPdi1PdiIDTerminalRuleCall_1_0_1; }
		
		//'and'
		public Keyword getAndKeyword_2() { return cAndKeyword_2; }
		
		//pdi2=[Pdi]
		public Assignment getPdi2Assignment_3() { return cPdi2Assignment_3; }
		
		//[Pdi]
		public CrossReference getPdi2PdiCrossReference_3_0() { return cPdi2PdiCrossReference_3_0; }
		
		//ID
		public RuleCall getPdi2PdiIDTerminalRuleCall_3_0_1() { return cPdi2PdiIDTerminalRuleCall_3_0_1; }
		
		//'distance'
		public Keyword getDistanceKeyword_4() { return cDistanceKeyword_4; }
		
		//distance=INT
		public Assignment getDistanceAssignment_5() { return cDistanceAssignment_5; }
		
		//INT
		public RuleCall getDistanceINTTerminalRuleCall_5_0() { return cDistanceINTTerminalRuleCall_5_0; }
	}
	public class EventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "se.cth.Pursue.Event");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEventKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cCollaborativeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cCollaborativeCollaborativeKeyword_2_0 = (Keyword)cCollaborativeAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cLocation_specificAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cLocation_specificLocationKeyword_3_0_0 = (Keyword)cLocation_specificAssignment_3_0.eContents().get(0);
		private final Assignment cLocationAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cLocationPdiCrossReference_3_1_0 = (CrossReference)cLocationAssignment_3_1.eContents().get(0);
		private final RuleCall cLocationPdiIDTerminalRuleCall_3_1_0_1 = (RuleCall)cLocationPdiCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cHas_durationAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final Keyword cHas_durationDurationKeyword_4_0_0 = (Keyword)cHas_durationAssignment_4_0.eContents().get(0);
		private final Assignment cDurationAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDurationINTTerminalRuleCall_4_1_0 = (RuleCall)cDurationAssignment_4_1.eContents().get(0);
		
		//Event:
		//	'event' name=STRING collaborative?='collaborative'? (location_specific?='location' location=[Pdi])?
		//	(has_duration?='duration' duration=INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'event' name=STRING collaborative?='collaborative'? (location_specific?='location' location=[Pdi])?
		//(has_duration?='duration' duration=INT)?
		public Group getGroup() { return cGroup; }
		
		//'event'
		public Keyword getEventKeyword_0() { return cEventKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//collaborative?='collaborative'?
		public Assignment getCollaborativeAssignment_2() { return cCollaborativeAssignment_2; }
		
		//'collaborative'
		public Keyword getCollaborativeCollaborativeKeyword_2_0() { return cCollaborativeCollaborativeKeyword_2_0; }
		
		//(location_specific?='location' location=[Pdi])?
		public Group getGroup_3() { return cGroup_3; }
		
		//location_specific?='location'
		public Assignment getLocation_specificAssignment_3_0() { return cLocation_specificAssignment_3_0; }
		
		//'location'
		public Keyword getLocation_specificLocationKeyword_3_0_0() { return cLocation_specificLocationKeyword_3_0_0; }
		
		//location=[Pdi]
		public Assignment getLocationAssignment_3_1() { return cLocationAssignment_3_1; }
		
		//[Pdi]
		public CrossReference getLocationPdiCrossReference_3_1_0() { return cLocationPdiCrossReference_3_1_0; }
		
		//ID
		public RuleCall getLocationPdiIDTerminalRuleCall_3_1_0_1() { return cLocationPdiIDTerminalRuleCall_3_1_0_1; }
		
		//(has_duration?='duration' duration=INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//has_duration?='duration'
		public Assignment getHas_durationAssignment_4_0() { return cHas_durationAssignment_4_0; }
		
		//'duration'
		public Keyword getHas_durationDurationKeyword_4_0_0() { return cHas_durationDurationKeyword_4_0_0; }
		
		//duration=INT
		public Assignment getDurationAssignment_4_1() { return cDurationAssignment_4_1; }
		
		//INT
		public RuleCall getDurationINTTerminalRuleCall_4_1_0() { return cDurationINTTerminalRuleCall_4_1_0; }
	}
	public class RegolaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "se.cth.Pursue.Regola");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRuleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cFirst_evAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final CrossReference cFirst_evEventCrossReference_3_0_0 = (CrossReference)cFirst_evAssignment_3_0.eContents().get(0);
		private final RuleCall cFirst_evEventIDTerminalRuleCall_3_0_0_1 = (RuleCall)cFirst_evEventCrossReference_3_0_0.eContents().get(1);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cIs_seq1Assignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final Keyword cIs_seq1LeftParenthesisKeyword_3_1_0_0 = (Keyword)cIs_seq1Assignment_3_1_0.eContents().get(0);
		private final Assignment cFirst_seqAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cFirst_seqSequenceParserRuleCall_3_1_1_0 = (RuleCall)cFirst_seqAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cThenAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final Keyword cThenBeforeKeyword_4_0_0 = (Keyword)cThenAssignment_4_0.eContents().get(0);
		private final Assignment cOrAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final Keyword cOrOrKeyword_4_1_0 = (Keyword)cOrAssignment_4_1.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cSecond_evAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final CrossReference cSecond_evEventCrossReference_5_0_0 = (CrossReference)cSecond_evAssignment_5_0.eContents().get(0);
		private final RuleCall cSecond_evEventIDTerminalRuleCall_5_0_0_1 = (RuleCall)cSecond_evEventCrossReference_5_0_0.eContents().get(1);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final Assignment cIs_seq2Assignment_5_1_0 = (Assignment)cGroup_5_1.eContents().get(0);
		private final Keyword cIs_seq2LeftParenthesisKeyword_5_1_0_0 = (Keyword)cIs_seq2Assignment_5_1_0.eContents().get(0);
		private final Assignment cSecond_seqAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cSecond_seqSequenceParserRuleCall_5_1_1_0 = (RuleCall)cSecond_seqAssignment_5_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5_1_2 = (Keyword)cGroup_5_1.eContents().get(2);
		
		//Regola:
		//	'rule' name=STRING ':' (first_ev=[Event] | is_seq1?='(' first_seq=Sequence ')') (then?='before' | or?='or')
		//	(second_ev=[Event] | is_seq2?='(' second_seq=Sequence ')');
		@Override public ParserRule getRule() { return rule; }
		
		//'rule' name=STRING ':' (first_ev=[Event] | is_seq1?='(' first_seq=Sequence ')') (then?='before' | or?='or')
		//(second_ev=[Event] | is_seq2?='(' second_seq=Sequence ')')
		public Group getGroup() { return cGroup; }
		
		//'rule'
		public Keyword getRuleKeyword_0() { return cRuleKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//first_ev=[Event] | is_seq1?='(' first_seq=Sequence ')'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//first_ev=[Event]
		public Assignment getFirst_evAssignment_3_0() { return cFirst_evAssignment_3_0; }
		
		//[Event]
		public CrossReference getFirst_evEventCrossReference_3_0_0() { return cFirst_evEventCrossReference_3_0_0; }
		
		//ID
		public RuleCall getFirst_evEventIDTerminalRuleCall_3_0_0_1() { return cFirst_evEventIDTerminalRuleCall_3_0_0_1; }
		
		//is_seq1?='(' first_seq=Sequence ')'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//is_seq1?='('
		public Assignment getIs_seq1Assignment_3_1_0() { return cIs_seq1Assignment_3_1_0; }
		
		//'('
		public Keyword getIs_seq1LeftParenthesisKeyword_3_1_0_0() { return cIs_seq1LeftParenthesisKeyword_3_1_0_0; }
		
		//first_seq=Sequence
		public Assignment getFirst_seqAssignment_3_1_1() { return cFirst_seqAssignment_3_1_1; }
		
		//Sequence
		public RuleCall getFirst_seqSequenceParserRuleCall_3_1_1_0() { return cFirst_seqSequenceParserRuleCall_3_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_1_2() { return cRightParenthesisKeyword_3_1_2; }
		
		//then?='before' | or?='or'
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//then?='before'
		public Assignment getThenAssignment_4_0() { return cThenAssignment_4_0; }
		
		//'before'
		public Keyword getThenBeforeKeyword_4_0_0() { return cThenBeforeKeyword_4_0_0; }
		
		//or?='or'
		public Assignment getOrAssignment_4_1() { return cOrAssignment_4_1; }
		
		//'or'
		public Keyword getOrOrKeyword_4_1_0() { return cOrOrKeyword_4_1_0; }
		
		//second_ev=[Event] | is_seq2?='(' second_seq=Sequence ')'
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//second_ev=[Event]
		public Assignment getSecond_evAssignment_5_0() { return cSecond_evAssignment_5_0; }
		
		//[Event]
		public CrossReference getSecond_evEventCrossReference_5_0_0() { return cSecond_evEventCrossReference_5_0_0; }
		
		//ID
		public RuleCall getSecond_evEventIDTerminalRuleCall_5_0_0_1() { return cSecond_evEventIDTerminalRuleCall_5_0_0_1; }
		
		//is_seq2?='(' second_seq=Sequence ')'
		public Group getGroup_5_1() { return cGroup_5_1; }
		
		//is_seq2?='('
		public Assignment getIs_seq2Assignment_5_1_0() { return cIs_seq2Assignment_5_1_0; }
		
		//'('
		public Keyword getIs_seq2LeftParenthesisKeyword_5_1_0_0() { return cIs_seq2LeftParenthesisKeyword_5_1_0_0; }
		
		//second_seq=Sequence
		public Assignment getSecond_seqAssignment_5_1_1() { return cSecond_seqAssignment_5_1_1; }
		
		//Sequence
		public RuleCall getSecond_seqSequenceParserRuleCall_5_1_1_0() { return cSecond_seqSequenceParserRuleCall_5_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5_1_2() { return cRightParenthesisKeyword_5_1_2; }
	}
	public class SequenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "se.cth.Pursue.Sequence");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cFirst_evAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final CrossReference cFirst_evEventCrossReference_0_0_0 = (CrossReference)cFirst_evAssignment_0_0.eContents().get(0);
		private final RuleCall cFirst_evEventIDTerminalRuleCall_0_0_0_1 = (RuleCall)cFirst_evEventCrossReference_0_0_0.eContents().get(1);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Assignment cIs_seq1Assignment_0_1_0 = (Assignment)cGroup_0_1.eContents().get(0);
		private final Keyword cIs_seq1LeftParenthesisKeyword_0_1_0_0 = (Keyword)cIs_seq1Assignment_0_1_0.eContents().get(0);
		private final Assignment cFirst_seqAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cFirst_seqSequenceParserRuleCall_0_1_1_0 = (RuleCall)cFirst_seqAssignment_0_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_1_2 = (Keyword)cGroup_0_1.eContents().get(2);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cThenAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final Keyword cThenBeforeKeyword_1_0_0 = (Keyword)cThenAssignment_1_0.eContents().get(0);
		private final Assignment cOrAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final Keyword cOrOrKeyword_1_1_0 = (Keyword)cOrAssignment_1_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cSecond_evAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final CrossReference cSecond_evEventCrossReference_2_0_0 = (CrossReference)cSecond_evAssignment_2_0.eContents().get(0);
		private final RuleCall cSecond_evEventIDTerminalRuleCall_2_0_0_1 = (RuleCall)cSecond_evEventCrossReference_2_0_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Assignment cIs_seq2Assignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final Keyword cIs_seq2LeftParenthesisKeyword_2_1_0_0 = (Keyword)cIs_seq2Assignment_2_1_0.eContents().get(0);
		private final Assignment cSecond_seqAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cSecond_seqSequenceParserRuleCall_2_1_1_0 = (RuleCall)cSecond_seqAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_1_2 = (Keyword)cGroup_2_1.eContents().get(2);
		
		//Sequence:
		//	(first_ev=[Event] | is_seq1?='(' first_seq=Sequence ')') (then?='before' | or?='or') (second_ev=[Event] | is_seq2?='('
		//	second_seq=Sequence ')');
		@Override public ParserRule getRule() { return rule; }
		
		//(first_ev=[Event] | is_seq1?='(' first_seq=Sequence ')') (then?='before' | or?='or') (second_ev=[Event] | is_seq2?='('
		//second_seq=Sequence ')')
		public Group getGroup() { return cGroup; }
		
		//first_ev=[Event] | is_seq1?='(' first_seq=Sequence ')'
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//first_ev=[Event]
		public Assignment getFirst_evAssignment_0_0() { return cFirst_evAssignment_0_0; }
		
		//[Event]
		public CrossReference getFirst_evEventCrossReference_0_0_0() { return cFirst_evEventCrossReference_0_0_0; }
		
		//ID
		public RuleCall getFirst_evEventIDTerminalRuleCall_0_0_0_1() { return cFirst_evEventIDTerminalRuleCall_0_0_0_1; }
		
		//is_seq1?='(' first_seq=Sequence ')'
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//is_seq1?='('
		public Assignment getIs_seq1Assignment_0_1_0() { return cIs_seq1Assignment_0_1_0; }
		
		//'('
		public Keyword getIs_seq1LeftParenthesisKeyword_0_1_0_0() { return cIs_seq1LeftParenthesisKeyword_0_1_0_0; }
		
		//first_seq=Sequence
		public Assignment getFirst_seqAssignment_0_1_1() { return cFirst_seqAssignment_0_1_1; }
		
		//Sequence
		public RuleCall getFirst_seqSequenceParserRuleCall_0_1_1_0() { return cFirst_seqSequenceParserRuleCall_0_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_1_2() { return cRightParenthesisKeyword_0_1_2; }
		
		//then?='before' | or?='or'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//then?='before'
		public Assignment getThenAssignment_1_0() { return cThenAssignment_1_0; }
		
		//'before'
		public Keyword getThenBeforeKeyword_1_0_0() { return cThenBeforeKeyword_1_0_0; }
		
		//or?='or'
		public Assignment getOrAssignment_1_1() { return cOrAssignment_1_1; }
		
		//'or'
		public Keyword getOrOrKeyword_1_1_0() { return cOrOrKeyword_1_1_0; }
		
		//second_ev=[Event] | is_seq2?='(' second_seq=Sequence ')'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//second_ev=[Event]
		public Assignment getSecond_evAssignment_2_0() { return cSecond_evAssignment_2_0; }
		
		//[Event]
		public CrossReference getSecond_evEventCrossReference_2_0_0() { return cSecond_evEventCrossReference_2_0_0; }
		
		//ID
		public RuleCall getSecond_evEventIDTerminalRuleCall_2_0_0_1() { return cSecond_evEventIDTerminalRuleCall_2_0_0_1; }
		
		//is_seq2?='(' second_seq=Sequence ')'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//is_seq2?='('
		public Assignment getIs_seq2Assignment_2_1_0() { return cIs_seq2Assignment_2_1_0; }
		
		//'('
		public Keyword getIs_seq2LeftParenthesisKeyword_2_1_0_0() { return cIs_seq2LeftParenthesisKeyword_2_1_0_0; }
		
		//second_seq=Sequence
		public Assignment getSecond_seqAssignment_2_1_1() { return cSecond_seqAssignment_2_1_1; }
		
		//Sequence
		public RuleCall getSecond_seqSequenceParserRuleCall_2_1_1_0() { return cSecond_seqSequenceParserRuleCall_2_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_1_2() { return cRightParenthesisKeyword_2_1_2; }
	}
	public class StatoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "se.cth.Pursue.Stato");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cInitiallyKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cTrAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final Keyword cTrTrueKeyword_4_0_0 = (Keyword)cTrAssignment_4_0.eContents().get(0);
		private final Assignment cFlAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final Keyword cFlFalseKeyword_4_1_0 = (Keyword)cFlAssignment_4_1.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cTrue_ifKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Assignment cTrue_eventsAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final CrossReference cTrue_eventsEventCrossReference_7_0_0 = (CrossReference)cTrue_eventsAssignment_7_0.eContents().get(0);
		private final RuleCall cTrue_eventsEventIDTerminalRuleCall_7_0_0_1 = (RuleCall)cTrue_eventsEventCrossReference_7_0_0.eContents().get(1);
		private final Group cGroup_7_1 = (Group)cGroup_7.eContents().get(1);
		private final Keyword cCommaKeyword_7_1_0 = (Keyword)cGroup_7_1.eContents().get(0);
		private final Assignment cTrue_eventsAssignment_7_1_1 = (Assignment)cGroup_7_1.eContents().get(1);
		private final CrossReference cTrue_eventsEventCrossReference_7_1_1_0 = (CrossReference)cTrue_eventsAssignment_7_1_1.eContents().get(0);
		private final RuleCall cTrue_eventsEventIDTerminalRuleCall_7_1_1_0_1 = (RuleCall)cTrue_eventsEventCrossReference_7_1_1_0.eContents().get(1);
		private final Keyword cFalse_ifKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Assignment cFalse_eventsAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final CrossReference cFalse_eventsEventCrossReference_9_0_0 = (CrossReference)cFalse_eventsAssignment_9_0.eContents().get(0);
		private final RuleCall cFalse_eventsEventIDTerminalRuleCall_9_0_0_1 = (RuleCall)cFalse_eventsEventCrossReference_9_0_0.eContents().get(1);
		private final Group cGroup_9_1 = (Group)cGroup_9.eContents().get(1);
		private final Keyword cCommaKeyword_9_1_0 = (Keyword)cGroup_9_1.eContents().get(0);
		private final Assignment cFalse_eventsAssignment_9_1_1 = (Assignment)cGroup_9_1.eContents().get(1);
		private final CrossReference cFalse_eventsEventCrossReference_9_1_1_0 = (CrossReference)cFalse_eventsAssignment_9_1_1.eContents().get(0);
		private final RuleCall cFalse_eventsEventIDTerminalRuleCall_9_1_1_0_1 = (RuleCall)cFalse_eventsEventCrossReference_9_1_1_0.eContents().get(1);
		
		//Stato:
		//	'state' name=STRING ':' 'initially' (tr?='true' | fl?='false') ',' 'true_if' (true_events+=[Event] (','
		//	true_events+=[Event])*) 'false_if' (false_events+=[Event] (',' false_events+=[Event])*);
		@Override public ParserRule getRule() { return rule; }
		
		//'state' name=STRING ':' 'initially' (tr?='true' | fl?='false') ',' 'true_if' (true_events+=[Event] (','
		//true_events+=[Event])*) 'false_if' (false_events+=[Event] (',' false_events+=[Event])*)
		public Group getGroup() { return cGroup; }
		
		//'state'
		public Keyword getStateKeyword_0() { return cStateKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'initially'
		public Keyword getInitiallyKeyword_3() { return cInitiallyKeyword_3; }
		
		//tr?='true' | fl?='false'
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//tr?='true'
		public Assignment getTrAssignment_4_0() { return cTrAssignment_4_0; }
		
		//'true'
		public Keyword getTrTrueKeyword_4_0_0() { return cTrTrueKeyword_4_0_0; }
		
		//fl?='false'
		public Assignment getFlAssignment_4_1() { return cFlAssignment_4_1; }
		
		//'false'
		public Keyword getFlFalseKeyword_4_1_0() { return cFlFalseKeyword_4_1_0; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//'true_if'
		public Keyword getTrue_ifKeyword_6() { return cTrue_ifKeyword_6; }
		
		//true_events+=[Event] (',' true_events+=[Event])*
		public Group getGroup_7() { return cGroup_7; }
		
		//true_events+=[Event]
		public Assignment getTrue_eventsAssignment_7_0() { return cTrue_eventsAssignment_7_0; }
		
		//[Event]
		public CrossReference getTrue_eventsEventCrossReference_7_0_0() { return cTrue_eventsEventCrossReference_7_0_0; }
		
		//ID
		public RuleCall getTrue_eventsEventIDTerminalRuleCall_7_0_0_1() { return cTrue_eventsEventIDTerminalRuleCall_7_0_0_1; }
		
		//(',' true_events+=[Event])*
		public Group getGroup_7_1() { return cGroup_7_1; }
		
		//','
		public Keyword getCommaKeyword_7_1_0() { return cCommaKeyword_7_1_0; }
		
		//true_events+=[Event]
		public Assignment getTrue_eventsAssignment_7_1_1() { return cTrue_eventsAssignment_7_1_1; }
		
		//[Event]
		public CrossReference getTrue_eventsEventCrossReference_7_1_1_0() { return cTrue_eventsEventCrossReference_7_1_1_0; }
		
		//ID
		public RuleCall getTrue_eventsEventIDTerminalRuleCall_7_1_1_0_1() { return cTrue_eventsEventIDTerminalRuleCall_7_1_1_0_1; }
		
		//'false_if'
		public Keyword getFalse_ifKeyword_8() { return cFalse_ifKeyword_8; }
		
		//false_events+=[Event] (',' false_events+=[Event])*
		public Group getGroup_9() { return cGroup_9; }
		
		//false_events+=[Event]
		public Assignment getFalse_eventsAssignment_9_0() { return cFalse_eventsAssignment_9_0; }
		
		//[Event]
		public CrossReference getFalse_eventsEventCrossReference_9_0_0() { return cFalse_eventsEventCrossReference_9_0_0; }
		
		//ID
		public RuleCall getFalse_eventsEventIDTerminalRuleCall_9_0_0_1() { return cFalse_eventsEventIDTerminalRuleCall_9_0_0_1; }
		
		//(',' false_events+=[Event])*
		public Group getGroup_9_1() { return cGroup_9_1; }
		
		//','
		public Keyword getCommaKeyword_9_1_0() { return cCommaKeyword_9_1_0; }
		
		//false_events+=[Event]
		public Assignment getFalse_eventsAssignment_9_1_1() { return cFalse_eventsAssignment_9_1_1; }
		
		//[Event]
		public CrossReference getFalse_eventsEventCrossReference_9_1_1_0() { return cFalse_eventsEventCrossReference_9_1_1_0; }
		
		//ID
		public RuleCall getFalse_eventsEventIDTerminalRuleCall_9_1_1_0_1() { return cFalse_eventsEventIDTerminalRuleCall_9_1_1_0_1; }
	}
	public class StateDepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "se.cth.Pursue.StateDep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStateDependencyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEventoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cEventoEventCrossReference_1_0 = (CrossReference)cEventoAssignment_1.eContents().get(0);
		private final RuleCall cEventoEventIDTerminalRuleCall_1_0_1 = (RuleCall)cEventoEventCrossReference_1_0.eContents().get(1);
		private final Keyword cOnly_ifKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cStatAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final CrossReference cStatStatoCrossReference_3_0_0_0 = (CrossReference)cStatAssignment_3_0_0.eContents().get(0);
		private final RuleCall cStatStatoIDTerminalRuleCall_3_0_0_0_1 = (RuleCall)cStatStatoCrossReference_3_0_0_0.eContents().get(1);
		private final Assignment cTrAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final Keyword cTrIs_trueKeyword_3_0_1_0 = (Keyword)cTrAssignment_3_0_1.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cStatAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final CrossReference cStatStatoCrossReference_3_1_0_0 = (CrossReference)cStatAssignment_3_1_0.eContents().get(0);
		private final RuleCall cStatStatoIDTerminalRuleCall_3_1_0_0_1 = (RuleCall)cStatStatoCrossReference_3_1_0_0.eContents().get(1);
		private final Assignment cFlAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final Keyword cFlIs_falseKeyword_3_1_1_0 = (Keyword)cFlAssignment_3_1_1.eContents().get(0);
		
		//StateDep:
		//	'stateDependency:' evento=[Event] 'only_if' (stat=[Stato] tr?='is_true' | stat=[Stato] fl?='is_false');
		@Override public ParserRule getRule() { return rule; }
		
		//'stateDependency:' evento=[Event] 'only_if' (stat=[Stato] tr?='is_true' | stat=[Stato] fl?='is_false')
		public Group getGroup() { return cGroup; }
		
		//'stateDependency:'
		public Keyword getStateDependencyKeyword_0() { return cStateDependencyKeyword_0; }
		
		//evento=[Event]
		public Assignment getEventoAssignment_1() { return cEventoAssignment_1; }
		
		//[Event]
		public CrossReference getEventoEventCrossReference_1_0() { return cEventoEventCrossReference_1_0; }
		
		//ID
		public RuleCall getEventoEventIDTerminalRuleCall_1_0_1() { return cEventoEventIDTerminalRuleCall_1_0_1; }
		
		//'only_if'
		public Keyword getOnly_ifKeyword_2() { return cOnly_ifKeyword_2; }
		
		//stat=[Stato] tr?='is_true' | stat=[Stato] fl?='is_false'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//stat=[Stato] tr?='is_true'
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//stat=[Stato]
		public Assignment getStatAssignment_3_0_0() { return cStatAssignment_3_0_0; }
		
		//[Stato]
		public CrossReference getStatStatoCrossReference_3_0_0_0() { return cStatStatoCrossReference_3_0_0_0; }
		
		//ID
		public RuleCall getStatStatoIDTerminalRuleCall_3_0_0_0_1() { return cStatStatoIDTerminalRuleCall_3_0_0_0_1; }
		
		//tr?='is_true'
		public Assignment getTrAssignment_3_0_1() { return cTrAssignment_3_0_1; }
		
		//'is_true'
		public Keyword getTrIs_trueKeyword_3_0_1_0() { return cTrIs_trueKeyword_3_0_1_0; }
		
		//stat=[Stato] fl?='is_false'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//stat=[Stato]
		public Assignment getStatAssignment_3_1_0() { return cStatAssignment_3_1_0; }
		
		//[Stato]
		public CrossReference getStatStatoCrossReference_3_1_0_0() { return cStatStatoCrossReference_3_1_0_0; }
		
		//ID
		public RuleCall getStatStatoIDTerminalRuleCall_3_1_0_0_1() { return cStatStatoIDTerminalRuleCall_3_1_0_0_1; }
		
		//fl?='is_false'
		public Assignment getFlAssignment_3_1_1() { return cFlAssignment_3_1_1; }
		
		//'is_false'
		public Keyword getFlIs_falseKeyword_3_1_1_0() { return cFlIs_falseKeyword_3_1_1_0; }
	}
	public class AgentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "se.cth.Pursue.Agent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAgentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cControllableAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cControllableControllableKeyword_2_0 = (Keyword)cControllableAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cMobileAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cMobileMobileKeyword_3_0_0 = (Keyword)cMobileAssignment_3_0.eContents().get(0);
		private final Assignment cSpeedAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSpeedINTTerminalRuleCall_3_1_0 = (RuleCall)cSpeedAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLocationKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInitial_locationAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cInitial_locationPdiCrossReference_4_1_0 = (CrossReference)cInitial_locationAssignment_4_1.eContents().get(0);
		private final RuleCall cInitial_locationPdiIDTerminalRuleCall_4_1_0_1 = (RuleCall)cInitial_locationPdiCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCan_doKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cActionsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cActionsEventCrossReference_5_1_0 = (CrossReference)cActionsAssignment_5_1.eContents().get(0);
		private final RuleCall cActionsEventIDTerminalRuleCall_5_1_0_1 = (RuleCall)cActionsEventCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cActionsAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final CrossReference cActionsEventCrossReference_5_2_1_0 = (CrossReference)cActionsAssignment_5_2_1.eContents().get(0);
		private final RuleCall cActionsEventIDTerminalRuleCall_5_2_1_0_1 = (RuleCall)cActionsEventCrossReference_5_2_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cReacts_toKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cReactionsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cReactionsEventCrossReference_6_1_0 = (CrossReference)cReactionsAssignment_6_1.eContents().get(0);
		private final RuleCall cReactionsEventIDTerminalRuleCall_6_1_0_1 = (RuleCall)cReactionsEventCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cReactionsAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final CrossReference cReactionsEventCrossReference_6_2_1_0 = (CrossReference)cReactionsAssignment_6_2_1.eContents().get(0);
		private final RuleCall cReactionsEventIDTerminalRuleCall_6_2_1_0_1 = (RuleCall)cReactionsEventCrossReference_6_2_1_0.eContents().get(1);
		
		//Agent:
		//	'agent' name=STRING controllable?='controllable'? (mobile?='mobile' speed=INT)? ('location' initial_location=[Pdi])
		//	("can_do" actions+=[Event] (',' actions+=[Event])*)? ("reacts_to" reactions+=[Event] (',' reactions+=[Event])*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'agent' name=STRING controllable?='controllable'? (mobile?='mobile' speed=INT)? ('location' initial_location=[Pdi])
		//("can_do" actions+=[Event] (',' actions+=[Event])*)? ("reacts_to" reactions+=[Event] (',' reactions+=[Event])*)?
		public Group getGroup() { return cGroup; }
		
		//'agent'
		public Keyword getAgentKeyword_0() { return cAgentKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//controllable?='controllable'?
		public Assignment getControllableAssignment_2() { return cControllableAssignment_2; }
		
		//'controllable'
		public Keyword getControllableControllableKeyword_2_0() { return cControllableControllableKeyword_2_0; }
		
		//(mobile?='mobile' speed=INT)?
		public Group getGroup_3() { return cGroup_3; }
		
		//mobile?='mobile'
		public Assignment getMobileAssignment_3_0() { return cMobileAssignment_3_0; }
		
		//'mobile'
		public Keyword getMobileMobileKeyword_3_0_0() { return cMobileMobileKeyword_3_0_0; }
		
		//speed=INT
		public Assignment getSpeedAssignment_3_1() { return cSpeedAssignment_3_1; }
		
		//INT
		public RuleCall getSpeedINTTerminalRuleCall_3_1_0() { return cSpeedINTTerminalRuleCall_3_1_0; }
		
		//'location' initial_location=[Pdi]
		public Group getGroup_4() { return cGroup_4; }
		
		//'location'
		public Keyword getLocationKeyword_4_0() { return cLocationKeyword_4_0; }
		
		//initial_location=[Pdi]
		public Assignment getInitial_locationAssignment_4_1() { return cInitial_locationAssignment_4_1; }
		
		//[Pdi]
		public CrossReference getInitial_locationPdiCrossReference_4_1_0() { return cInitial_locationPdiCrossReference_4_1_0; }
		
		//ID
		public RuleCall getInitial_locationPdiIDTerminalRuleCall_4_1_0_1() { return cInitial_locationPdiIDTerminalRuleCall_4_1_0_1; }
		
		//("can_do" actions+=[Event] (',' actions+=[Event])*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//"can_do"
		public Keyword getCan_doKeyword_5_0() { return cCan_doKeyword_5_0; }
		
		//actions+=[Event]
		public Assignment getActionsAssignment_5_1() { return cActionsAssignment_5_1; }
		
		//[Event]
		public CrossReference getActionsEventCrossReference_5_1_0() { return cActionsEventCrossReference_5_1_0; }
		
		//ID
		public RuleCall getActionsEventIDTerminalRuleCall_5_1_0_1() { return cActionsEventIDTerminalRuleCall_5_1_0_1; }
		
		//(',' actions+=[Event])*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//','
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//actions+=[Event]
		public Assignment getActionsAssignment_5_2_1() { return cActionsAssignment_5_2_1; }
		
		//[Event]
		public CrossReference getActionsEventCrossReference_5_2_1_0() { return cActionsEventCrossReference_5_2_1_0; }
		
		//ID
		public RuleCall getActionsEventIDTerminalRuleCall_5_2_1_0_1() { return cActionsEventIDTerminalRuleCall_5_2_1_0_1; }
		
		//("reacts_to" reactions+=[Event] (',' reactions+=[Event])*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//"reacts_to"
		public Keyword getReacts_toKeyword_6_0() { return cReacts_toKeyword_6_0; }
		
		//reactions+=[Event]
		public Assignment getReactionsAssignment_6_1() { return cReactionsAssignment_6_1; }
		
		//[Event]
		public CrossReference getReactionsEventCrossReference_6_1_0() { return cReactionsEventCrossReference_6_1_0; }
		
		//ID
		public RuleCall getReactionsEventIDTerminalRuleCall_6_1_0_1() { return cReactionsEventIDTerminalRuleCall_6_1_0_1; }
		
		//(',' reactions+=[Event])*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//','
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//reactions+=[Event]
		public Assignment getReactionsAssignment_6_2_1() { return cReactionsAssignment_6_2_1; }
		
		//[Event]
		public CrossReference getReactionsEventCrossReference_6_2_1_0() { return cReactionsEventCrossReference_6_2_1_0; }
		
		//ID
		public RuleCall getReactionsEventIDTerminalRuleCall_6_2_1_0_1() { return cReactionsEventIDTerminalRuleCall_6_2_1_0_1; }
	}
	public class ObjectiveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "se.cth.Pursue.Objective");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cIs_ifAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cIs_ifIfKeyword_0_0_0 = (Keyword)cIs_ifAssignment_0_0.eContents().get(0);
		private final Assignment cCauseAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cCauseEventCrossReference_0_1_0 = (CrossReference)cCauseAssignment_0_1.eContents().get(0);
		private final RuleCall cCauseEventIDTerminalRuleCall_0_1_0_1 = (RuleCall)cCauseEventCrossReference_0_1_0.eContents().get(1);
		private final Keyword cThenKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cReactionAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final CrossReference cReactionEventCrossReference_0_3_0 = (CrossReference)cReactionAssignment_0_3.eContents().get(0);
		private final RuleCall cReactionEventIDTerminalRuleCall_0_3_0_1 = (RuleCall)cReactionEventCrossReference_0_3_0.eContents().get(1);
		private final Keyword cWithinKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Assignment cTimeAssignment_0_5 = (Assignment)cGroup_0.eContents().get(5);
		private final RuleCall cTimeINTTerminalRuleCall_0_5_0 = (RuleCall)cTimeAssignment_0_5.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cIs_avoidAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cIs_avoidAvoidKeyword_1_0_0 = (Keyword)cIs_avoidAssignment_1_0.eContents().get(0);
		private final Assignment cLoseAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cLoseEventCrossReference_1_1_0 = (CrossReference)cLoseAssignment_1_1.eContents().get(0);
		private final RuleCall cLoseEventIDTerminalRuleCall_1_1_0_1 = (RuleCall)cLoseEventCrossReference_1_1_0.eContents().get(1);
		
		//Objective:
		//	is_if?='if' cause=[Event] 'then' reaction=[Event] 'within' time=INT | is_avoid?='avoid' lose=[Event];
		@Override public ParserRule getRule() { return rule; }
		
		//is_if?='if' cause=[Event] 'then' reaction=[Event] 'within' time=INT | is_avoid?='avoid' lose=[Event]
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//is_if?='if' cause=[Event] 'then' reaction=[Event] 'within' time=INT
		public Group getGroup_0() { return cGroup_0; }
		
		//is_if?='if'
		public Assignment getIs_ifAssignment_0_0() { return cIs_ifAssignment_0_0; }
		
		//'if'
		public Keyword getIs_ifIfKeyword_0_0_0() { return cIs_ifIfKeyword_0_0_0; }
		
		//cause=[Event]
		public Assignment getCauseAssignment_0_1() { return cCauseAssignment_0_1; }
		
		//[Event]
		public CrossReference getCauseEventCrossReference_0_1_0() { return cCauseEventCrossReference_0_1_0; }
		
		//ID
		public RuleCall getCauseEventIDTerminalRuleCall_0_1_0_1() { return cCauseEventIDTerminalRuleCall_0_1_0_1; }
		
		//'then'
		public Keyword getThenKeyword_0_2() { return cThenKeyword_0_2; }
		
		//reaction=[Event]
		public Assignment getReactionAssignment_0_3() { return cReactionAssignment_0_3; }
		
		//[Event]
		public CrossReference getReactionEventCrossReference_0_3_0() { return cReactionEventCrossReference_0_3_0; }
		
		//ID
		public RuleCall getReactionEventIDTerminalRuleCall_0_3_0_1() { return cReactionEventIDTerminalRuleCall_0_3_0_1; }
		
		//'within'
		public Keyword getWithinKeyword_0_4() { return cWithinKeyword_0_4; }
		
		//time=INT
		public Assignment getTimeAssignment_0_5() { return cTimeAssignment_0_5; }
		
		//INT
		public RuleCall getTimeINTTerminalRuleCall_0_5_0() { return cTimeINTTerminalRuleCall_0_5_0; }
		
		//is_avoid?='avoid' lose=[Event]
		public Group getGroup_1() { return cGroup_1; }
		
		//is_avoid?='avoid'
		public Assignment getIs_avoidAssignment_1_0() { return cIs_avoidAssignment_1_0; }
		
		//'avoid'
		public Keyword getIs_avoidAvoidKeyword_1_0_0() { return cIs_avoidAvoidKeyword_1_0_0; }
		
		//lose=[Event]
		public Assignment getLoseAssignment_1_1() { return cLoseAssignment_1_1; }
		
		//[Event]
		public CrossReference getLoseEventCrossReference_1_1_0() { return cLoseEventCrossReference_1_1_0; }
		
		//ID
		public RuleCall getLoseEventIDTerminalRuleCall_1_1_0_1() { return cLoseEventIDTerminalRuleCall_1_1_0_1; }
	}
	public class ReachObjectiveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "se.cth.Pursue.ReachObjective");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cGoalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cGoalEventCrossReference_1_0 = (CrossReference)cGoalAssignment_1.eContents().get(0);
		private final RuleCall cGoalEventIDTerminalRuleCall_1_0_1 = (RuleCall)cGoalEventCrossReference_1_0.eContents().get(1);
		private final Keyword cAfterKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLife_spanAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLife_spanINTTerminalRuleCall_3_0 = (RuleCall)cLife_spanAssignment_3.eContents().get(0);
		
		//ReachObjective:
		//	'do' goal=[Event] 'after' life_span=INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'do' goal=[Event] 'after' life_span=INT
		public Group getGroup() { return cGroup; }
		
		//'do'
		public Keyword getDoKeyword_0() { return cDoKeyword_0; }
		
		//goal=[Event]
		public Assignment getGoalAssignment_1() { return cGoalAssignment_1; }
		
		//[Event]
		public CrossReference getGoalEventCrossReference_1_0() { return cGoalEventCrossReference_1_0; }
		
		//ID
		public RuleCall getGoalEventIDTerminalRuleCall_1_0_1() { return cGoalEventIDTerminalRuleCall_1_0_1; }
		
		//'after'
		public Keyword getAfterKeyword_2() { return cAfterKeyword_2; }
		
		//life_span=INT
		public Assignment getLife_spanAssignment_3() { return cLife_spanAssignment_3; }
		
		//INT
		public RuleCall getLife_spanINTTerminalRuleCall_3_0() { return cLife_spanINTTerminalRuleCall_3_0; }
	}
	
	
	private final ModelElements pModel;
	private final PdiElements pPdi;
	private final ConnectionElements pConnection;
	private final EventElements pEvent;
	private final RegolaElements pRegola;
	private final SequenceElements pSequence;
	private final StatoElements pStato;
	private final StateDepElements pStateDep;
	private final AgentElements pAgent;
	private final ObjectiveElements pObjective;
	private final ReachObjectiveElements pReachObjective;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public PursueGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pPdi = new PdiElements();
		this.pConnection = new ConnectionElements();
		this.pEvent = new EventElements();
		this.pRegola = new RegolaElements();
		this.pSequence = new SequenceElements();
		this.pStato = new StatoElements();
		this.pStateDep = new StateDepElements();
		this.pAgent = new AgentElements();
		this.pObjective = new ObjectiveElements();
		this.pReachObjective = new ReachObjectiveElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("se.cth.Pursue".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	locations+=Pdi*
	//	connections+=connection*
	//	events+=Event*
	//	regole+=Regola*
	//	stati+=Stato*
	//	dipendenze+=StateDep*
	//	agents+=Agent* (have_obj?='objective:' objective=Objective)? (have_reach_obj?='reach_objective:'
	//	reachobjective=ReachObjective)?;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Pdi:
	//	'poi' name=STRING;
	public PdiElements getPdiAccess() {
		return pPdi;
	}
	
	public ParserRule getPdiRule() {
		return getPdiAccess().getRule();
	}
	
	//connection:
	//	'connect' pdi1=[Pdi] 'and' pdi2=[Pdi] 'distance' distance=INT;
	public ConnectionElements getConnectionAccess() {
		return pConnection;
	}
	
	public ParserRule getConnectionRule() {
		return getConnectionAccess().getRule();
	}
	
	//Event:
	//	'event' name=STRING collaborative?='collaborative'? (location_specific?='location' location=[Pdi])?
	//	(has_duration?='duration' duration=INT)?;
	public EventElements getEventAccess() {
		return pEvent;
	}
	
	public ParserRule getEventRule() {
		return getEventAccess().getRule();
	}
	
	//Regola:
	//	'rule' name=STRING ':' (first_ev=[Event] | is_seq1?='(' first_seq=Sequence ')') (then?='before' | or?='or')
	//	(second_ev=[Event] | is_seq2?='(' second_seq=Sequence ')');
	public RegolaElements getRegolaAccess() {
		return pRegola;
	}
	
	public ParserRule getRegolaRule() {
		return getRegolaAccess().getRule();
	}
	
	//Sequence:
	//	(first_ev=[Event] | is_seq1?='(' first_seq=Sequence ')') (then?='before' | or?='or') (second_ev=[Event] | is_seq2?='('
	//	second_seq=Sequence ')');
	public SequenceElements getSequenceAccess() {
		return pSequence;
	}
	
	public ParserRule getSequenceRule() {
		return getSequenceAccess().getRule();
	}
	
	//Stato:
	//	'state' name=STRING ':' 'initially' (tr?='true' | fl?='false') ',' 'true_if' (true_events+=[Event] (','
	//	true_events+=[Event])*) 'false_if' (false_events+=[Event] (',' false_events+=[Event])*);
	public StatoElements getStatoAccess() {
		return pStato;
	}
	
	public ParserRule getStatoRule() {
		return getStatoAccess().getRule();
	}
	
	//StateDep:
	//	'stateDependency:' evento=[Event] 'only_if' (stat=[Stato] tr?='is_true' | stat=[Stato] fl?='is_false');
	public StateDepElements getStateDepAccess() {
		return pStateDep;
	}
	
	public ParserRule getStateDepRule() {
		return getStateDepAccess().getRule();
	}
	
	//Agent:
	//	'agent' name=STRING controllable?='controllable'? (mobile?='mobile' speed=INT)? ('location' initial_location=[Pdi])
	//	("can_do" actions+=[Event] (',' actions+=[Event])*)? ("reacts_to" reactions+=[Event] (',' reactions+=[Event])*)?;
	public AgentElements getAgentAccess() {
		return pAgent;
	}
	
	public ParserRule getAgentRule() {
		return getAgentAccess().getRule();
	}
	
	//Objective:
	//	is_if?='if' cause=[Event] 'then' reaction=[Event] 'within' time=INT | is_avoid?='avoid' lose=[Event];
	public ObjectiveElements getObjectiveAccess() {
		return pObjective;
	}
	
	public ParserRule getObjectiveRule() {
		return getObjectiveAccess().getRule();
	}
	
	//ReachObjective:
	//	'do' goal=[Event] 'after' life_span=INT;
	public ReachObjectiveElements getReachObjectiveAccess() {
		return pReachObjective;
	}
	
	public ParserRule getReachObjectiveRule() {
		return getReachObjectiveAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
