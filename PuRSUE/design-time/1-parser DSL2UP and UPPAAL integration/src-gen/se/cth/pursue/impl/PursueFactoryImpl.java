/**
 * generated by Xtext 2.14.0
 */
package se.cth.pursue.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import se.cth.pursue.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class PursueFactoryImpl extends EFactoryImpl implements PursueFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static PursueFactory init()
  {
    try
    {
      PursueFactory thePursueFactory = (PursueFactory)EPackage.Registry.INSTANCE.getEFactory(PursuePackage.eNS_URI);
      if (thePursueFactory != null)
      {
        return thePursueFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new PursueFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PursueFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case PursuePackage.MODEL: return createModel();
      case PursuePackage.PDI: return createPdi();
      case PursuePackage.CONNECTION: return createconnection();
      case PursuePackage.EVENT: return createEvent();
      case PursuePackage.REGOLA: return createRegola();
      case PursuePackage.SEQUENCE: return createSequence();
      case PursuePackage.STATO: return createStato();
      case PursuePackage.STATE_DEP: return createStateDep();
      case PursuePackage.AGENT: return createAgent();
      case PursuePackage.OBJECTIVE: return createObjective();
      case PursuePackage.REACH_OBJECTIVE: return createReachObjective();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Pdi createPdi()
  {
    PdiImpl pdi = new PdiImpl();
    return pdi;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public connection createconnection()
  {
    connectionImpl connection = new connectionImpl();
    return connection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Event createEvent()
  {
    EventImpl event = new EventImpl();
    return event;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Regola createRegola()
  {
    RegolaImpl regola = new RegolaImpl();
    return regola;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Sequence createSequence()
  {
    SequenceImpl sequence = new SequenceImpl();
    return sequence;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Stato createStato()
  {
    StatoImpl stato = new StatoImpl();
    return stato;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StateDep createStateDep()
  {
    StateDepImpl stateDep = new StateDepImpl();
    return stateDep;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Agent createAgent()
  {
    AgentImpl agent = new AgentImpl();
    return agent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Objective createObjective()
  {
    ObjectiveImpl objective = new ObjectiveImpl();
    return objective;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ReachObjective createReachObjective()
  {
    ReachObjectiveImpl reachObjective = new ReachObjectiveImpl();
    return reachObjective;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PursuePackage getPursuePackage()
  {
    return (PursuePackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static PursuePackage getPackage()
  {
    return PursuePackage.eINSTANCE;
  }

} //PursueFactoryImpl
