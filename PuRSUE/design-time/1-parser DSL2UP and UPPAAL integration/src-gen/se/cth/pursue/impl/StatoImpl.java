/**
 * generated by Xtext 2.14.0
 */
package se.cth.pursue.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

import se.cth.pursue.Event;
import se.cth.pursue.PursuePackage;
import se.cth.pursue.Stato;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Stato</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link se.cth.pursue.impl.StatoImpl#getName <em>Name</em>}</li>
 *   <li>{@link se.cth.pursue.impl.StatoImpl#isTr <em>Tr</em>}</li>
 *   <li>{@link se.cth.pursue.impl.StatoImpl#isFl <em>Fl</em>}</li>
 *   <li>{@link se.cth.pursue.impl.StatoImpl#getTrue_events <em>True events</em>}</li>
 *   <li>{@link se.cth.pursue.impl.StatoImpl#getFalse_events <em>False events</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StatoImpl extends MinimalEObjectImpl.Container implements Stato
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #isTr() <em>Tr</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTr()
   * @generated
   * @ordered
   */
  protected static final boolean TR_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isTr() <em>Tr</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTr()
   * @generated
   * @ordered
   */
  protected boolean tr = TR_EDEFAULT;

  /**
   * The default value of the '{@link #isFl() <em>Fl</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFl()
   * @generated
   * @ordered
   */
  protected static final boolean FL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isFl() <em>Fl</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFl()
   * @generated
   * @ordered
   */
  protected boolean fl = FL_EDEFAULT;

  /**
   * The cached value of the '{@link #getTrue_events() <em>True events</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrue_events()
   * @generated
   * @ordered
   */
  protected EList<Event> true_events;

  /**
   * The cached value of the '{@link #getFalse_events() <em>False events</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFalse_events()
   * @generated
   * @ordered
   */
  protected EList<Event> false_events;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StatoImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PursuePackage.Literals.STATO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuePackage.STATO__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isTr()
  {
    return tr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTr(boolean newTr)
  {
    boolean oldTr = tr;
    tr = newTr;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuePackage.STATO__TR, oldTr, tr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isFl()
  {
    return fl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFl(boolean newFl)
  {
    boolean oldFl = fl;
    fl = newFl;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PursuePackage.STATO__FL, oldFl, fl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Event> getTrue_events()
  {
    if (true_events == null)
    {
      true_events = new EObjectResolvingEList<Event>(Event.class, this, PursuePackage.STATO__TRUE_EVENTS);
    }
    return true_events;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Event> getFalse_events()
  {
    if (false_events == null)
    {
      false_events = new EObjectResolvingEList<Event>(Event.class, this, PursuePackage.STATO__FALSE_EVENTS);
    }
    return false_events;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PursuePackage.STATO__NAME:
        return getName();
      case PursuePackage.STATO__TR:
        return isTr();
      case PursuePackage.STATO__FL:
        return isFl();
      case PursuePackage.STATO__TRUE_EVENTS:
        return getTrue_events();
      case PursuePackage.STATO__FALSE_EVENTS:
        return getFalse_events();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PursuePackage.STATO__NAME:
        setName((String)newValue);
        return;
      case PursuePackage.STATO__TR:
        setTr((Boolean)newValue);
        return;
      case PursuePackage.STATO__FL:
        setFl((Boolean)newValue);
        return;
      case PursuePackage.STATO__TRUE_EVENTS:
        getTrue_events().clear();
        getTrue_events().addAll((Collection<? extends Event>)newValue);
        return;
      case PursuePackage.STATO__FALSE_EVENTS:
        getFalse_events().clear();
        getFalse_events().addAll((Collection<? extends Event>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PursuePackage.STATO__NAME:
        setName(NAME_EDEFAULT);
        return;
      case PursuePackage.STATO__TR:
        setTr(TR_EDEFAULT);
        return;
      case PursuePackage.STATO__FL:
        setFl(FL_EDEFAULT);
        return;
      case PursuePackage.STATO__TRUE_EVENTS:
        getTrue_events().clear();
        return;
      case PursuePackage.STATO__FALSE_EVENTS:
        getFalse_events().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PursuePackage.STATO__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case PursuePackage.STATO__TR:
        return tr != TR_EDEFAULT;
      case PursuePackage.STATO__FL:
        return fl != FL_EDEFAULT;
      case PursuePackage.STATO__TRUE_EVENTS:
        return true_events != null && !true_events.isEmpty();
      case PursuePackage.STATO__FALSE_EVENTS:
        return false_events != null && !false_events.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", tr: ");
    result.append(tr);
    result.append(", fl: ");
    result.append(fl);
    result.append(')');
    return result.toString();
  }

} //StatoImpl
